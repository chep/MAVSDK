// WARNING: THIS FILE IS AUTOGENERATED! As such, it should not be edited.
// Edits need to be made to the proto files
// (see https://github.com/mavlink/MAVSDK-Proto/blob/master/protos/lumos_server/lumos_server.proto)

#include <iomanip>

#include "lumos_server_impl.h"
#include "plugins/lumos_server/lumos_server.h"

namespace mavsdk {

using DroneStatus = LumosServer::DroneStatus;

LumosServer::LumosServer(std::shared_ptr<ServerComponent> server_component) :
    ServerPluginBase(),
    _impl{std::make_unique<LumosServerImpl>(server_component)}
{}

LumosServer::~LumosServer() {}

void LumosServer::set_drone_status(DroneStatus drone_status) const
{
    _impl->set_drone_status(drone_status);
}

std::ostream& operator<<(std::ostream& str, LumosServer::Result const& result)
{
    switch (result) {
        case LumosServer::Result::Success:
            return str << "Success";
        case LumosServer::Result::Error:
            return str << "Error";
        default:
            return str << "Unknown";
    }
}

bool operator==(const LumosServer::DroneStatus& lhs, const LumosServer::DroneStatus& rhs)
{
    return ((std::isnan(rhs.battery_status) && std::isnan(lhs.battery_status)) ||
            rhs.battery_status == lhs.battery_status) &&
           (rhs.lat == lhs.lat) && (rhs.lon == lhs.lon) && (rhs.alt == lhs.alt) &&
           ((std::isnan(rhs.mag_norm) && std::isnan(lhs.mag_norm)) ||
            rhs.mag_norm == lhs.mag_norm) &&
           (rhs.hdg == lhs.hdg) && (rhs.uuid == lhs.uuid) && (rhs.fw_major == lhs.fw_major) &&
           (rhs.fw_minor == lhs.fw_minor) && (rhs.fw_patch == lhs.fw_patch) &&
           (rhs.dance_status == lhs.dance_status) && (rhs.rssi_wifi == lhs.rssi_wifi) &&
           (rhs.rssi_xbee == lhs.rssi_xbee) && (rhs.satellites_used == lhs.satellites_used) &&
           (rhs.fix_type == lhs.fix_type) && (rhs.alt_ref == lhs.alt_ref);
}

std::ostream& operator<<(std::ostream& str, LumosServer::DroneStatus const& drone_status)
{
    str << std::setprecision(15);
    str << "drone_status:" << '\n' << "{\n";
    str << "    battery_status: " << drone_status.battery_status << '\n';
    str << "    lat: " << drone_status.lat << '\n';
    str << "    lon: " << drone_status.lon << '\n';
    str << "    alt: " << drone_status.alt << '\n';
    str << "    mag_norm: " << drone_status.mag_norm << '\n';
    str << "    hdg: " << drone_status.hdg << '\n';
    str << "    uuid: " << drone_status.uuid << '\n';
    str << "    fw_major: " << drone_status.fw_major << '\n';
    str << "    fw_minor: " << drone_status.fw_minor << '\n';
    str << "    fw_patch: " << drone_status.fw_patch << '\n';
    str << "    dance_status: " << drone_status.dance_status << '\n';
    str << "    rssi_wifi: " << drone_status.rssi_wifi << '\n';
    str << "    rssi_xbee: " << drone_status.rssi_xbee << '\n';
    str << "    satellites_used: " << drone_status.satellites_used << '\n';
    str << "    fix_type: " << drone_status.fix_type << '\n';
    str << "    alt_ref: " << drone_status.alt_ref << '\n';
    str << '}';
    return str;
}

} // namespace mavsdk