syntax = "proto3";

package mavsdk.rpc.lumos_server;

import "mavsdk_options.proto";

service LumosServerService {
    rpc SetDroneInfo(SetDroneInfoRequest) returns(SetDroneInfoResponse) {option (mavsdk.options.async_type) = SYNC;}
    rpc SetCompanionStatus(SetCompanionStatusRequest) returns(SetCompanionStatusResponse) {option (mavsdk.options.async_type) = SYNC;}
    rpc SubscribeDance(SubscribeDanceRequest) returns(stream DanceResponse) {}
    rpc SubscribeParams(SubscribeParamsRequest) returns(stream ParamsResponse) {}
    rpc SubscribeStart(SubscribeStartRequest) returns(stream StartResponse) {}
    rpc SubscribeLocalPos(SubscribeLocalPosRequest) returns(stream LocalPosResponse) {}
    rpc SubscribeGlobalPos(SubscribeGlobalPosRequest) returns(stream GlobalPosResponse) {}
    rpc SubscribeLandCmd(SubscribeLandCmdRequest) returns(stream LandCmdResponse) {}
    rpc SubscribeRtlCmd(SubscribeRtlCmdRequest) returns(stream RtlCmdResponse) {}
    rpc SubscribeKillCmd(SubscribeKillCmdRequest) returns(stream KillCmdResponse) {}
}

message SetDroneInfoRequest {
    DroneInfo drone_info = 1;
}

message SetDroneInfoResponse {
}

message SetCompanionStatusRequest {
    CompanionStatus drone_info = 1;
}

message SetCompanionStatusResponse {
}

message SubscribeDanceRequest {}
message DanceResponse{
    Dance dance = 1;
}

message Dance {
    repeated uint32 data = 1;
    uint32 len = 2;
}

message SubscribeParamsRequest {}
message ParamsResponse {
    Params params = 1;
}

message SubscribeStartRequest {}
message StartResponse {
    int32 mode = 1;
}

message SubscribeLocalPosRequest {}
message LocalPosResponse {
	Position pos = 1;
}

message Position {
    float x = 1;
	float y = 2;
	float z = 3;
}

message SubscribeGlobalPosRequest {}
message GlobalPosResponse {
	GlobalPosition pos = 1;
}

message GlobalPosition {
    double lat = 1;
	double lon = 2;
	float alt = 3;
}

message Coord {
	float x = 1;
	float y = 2;
}

message Params {
	float lon = 1;
    float lat = 2;
    float alt = 3;
    int32 gps_start = 4;
    float gf_alt = 5;

	repeated Coord vertices = 6;
}

message LumosResult {
    // Possible results returned for commands
    enum Result {
        RESULT_SUCCESS = 0;
        RESULT_ERROR = 1;
    }
    Result result = 1; // Result enum value
    string result_str = 2; // Human-readable English string describing the result
}

message DroneInfo {
	string uuid = 7; /*<  uuid*/
	uint32 fw_major = 8; /*<  Firmware version major (first byte)*/
	uint32 fw_minor = 9; /*<  Firmware version minor (second byte)*/
	uint32 fw_patch = 10; /*<  Firmware version patch (third byte)*/
}

message CompanionStatus {
	uint32 dance_status = 1;
	uint32 rssi_wifi = 2;
	uint32 rssi_xbee = 3;
}

message SubscribeLandCmdRequest {}
message LandCmdResponse {
	int32 unused = 1;
}

message SubscribeRtlCmdRequest {}
message RtlCmdResponse {
	int32 unused = 1;
}

message SubscribeKillCmdRequest {}
message KillCmdResponse {
	int32 unused = 1;
}
