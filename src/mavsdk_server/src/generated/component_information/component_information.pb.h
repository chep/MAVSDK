// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component_information/component_information.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_component_5finformation_2fcomponent_5finformation_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_component_5finformation_2fcomponent_5finformation_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_component_5finformation_2fcomponent_5finformation_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_component_5finformation_2fcomponent_5finformation_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_component_5finformation_2fcomponent_5finformation_2eproto;
namespace mavsdk {
namespace rpc {
namespace component_information {
class AccessFloatParamsRequest;
struct AccessFloatParamsRequestDefaultTypeInternal;
extern AccessFloatParamsRequestDefaultTypeInternal _AccessFloatParamsRequest_default_instance_;
class AccessFloatParamsResponse;
struct AccessFloatParamsResponseDefaultTypeInternal;
extern AccessFloatParamsResponseDefaultTypeInternal _AccessFloatParamsResponse_default_instance_;
class ComponentInformationResult;
struct ComponentInformationResultDefaultTypeInternal;
extern ComponentInformationResultDefaultTypeInternal _ComponentInformationResult_default_instance_;
class FloatParam;
struct FloatParamDefaultTypeInternal;
extern FloatParamDefaultTypeInternal _FloatParam_default_instance_;
class FloatParamResponse;
struct FloatParamResponseDefaultTypeInternal;
extern FloatParamResponseDefaultTypeInternal _FloatParamResponse_default_instance_;
class FloatParamUpdate;
struct FloatParamUpdateDefaultTypeInternal;
extern FloatParamUpdateDefaultTypeInternal _FloatParamUpdate_default_instance_;
class SubscribeFloatParamRequest;
struct SubscribeFloatParamRequestDefaultTypeInternal;
extern SubscribeFloatParamRequestDefaultTypeInternal _SubscribeFloatParamRequest_default_instance_;
}  // namespace component_information
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace component_information {
enum ComponentInformationResult_Result : int {
  ComponentInformationResult_Result_RESULT_UNKNOWN = 0,
  ComponentInformationResult_Result_RESULT_SUCCESS = 1,
  ComponentInformationResult_Result_RESULT_NO_SYSTEM = 3,
  ComponentInformationResult_Result_ComponentInformationResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ComponentInformationResult_Result_ComponentInformationResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ComponentInformationResult_Result_IsValid(int value);
extern const uint32_t ComponentInformationResult_Result_internal_data_[];
constexpr ComponentInformationResult_Result ComponentInformationResult_Result_Result_MIN = static_cast<ComponentInformationResult_Result>(0);
constexpr ComponentInformationResult_Result ComponentInformationResult_Result_Result_MAX = static_cast<ComponentInformationResult_Result>(3);
constexpr int ComponentInformationResult_Result_Result_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
ComponentInformationResult_Result_descriptor();
template <typename T>
const std::string& ComponentInformationResult_Result_Name(T value) {
  static_assert(std::is_same<T, ComponentInformationResult_Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return ComponentInformationResult_Result_Name(static_cast<ComponentInformationResult_Result>(value));
}
template <>
inline const std::string& ComponentInformationResult_Result_Name(ComponentInformationResult_Result value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ComponentInformationResult_Result_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool ComponentInformationResult_Result_Parse(absl::string_view name, ComponentInformationResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ComponentInformationResult_Result>(
      ComponentInformationResult_Result_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SubscribeFloatParamRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.component_information.SubscribeFloatParamRequest) */ {
 public:
  inline SubscribeFloatParamRequest() : SubscribeFloatParamRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeFloatParamRequest(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeFloatParamRequest(const SubscribeFloatParamRequest& from)
      : SubscribeFloatParamRequest(nullptr, from) {}
  SubscribeFloatParamRequest(SubscribeFloatParamRequest&& from) noexcept
    : SubscribeFloatParamRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeFloatParamRequest& operator=(const SubscribeFloatParamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeFloatParamRequest& operator=(SubscribeFloatParamRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeFloatParamRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeFloatParamRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeFloatParamRequest*>(
               &_SubscribeFloatParamRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SubscribeFloatParamRequest& a, SubscribeFloatParamRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeFloatParamRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeFloatParamRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeFloatParamRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubscribeFloatParamRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeFloatParamRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeFloatParamRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.component_information.SubscribeFloatParamRequest";
  }
  protected:
  explicit SubscribeFloatParamRequest(::google::protobuf::Arena* arena);
  SubscribeFloatParamRequest(::google::protobuf::Arena* arena, const SubscribeFloatParamRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.component_information.SubscribeFloatParamRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_component_5finformation_2fcomponent_5finformation_2eproto;
};// -------------------------------------------------------------------

class FloatParamUpdate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.component_information.FloatParamUpdate) */ {
 public:
  inline FloatParamUpdate() : FloatParamUpdate(nullptr) {}
  ~FloatParamUpdate() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FloatParamUpdate(::google::protobuf::internal::ConstantInitialized);

  inline FloatParamUpdate(const FloatParamUpdate& from)
      : FloatParamUpdate(nullptr, from) {}
  FloatParamUpdate(FloatParamUpdate&& from) noexcept
    : FloatParamUpdate() {
    *this = ::std::move(from);
  }

  inline FloatParamUpdate& operator=(const FloatParamUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatParamUpdate& operator=(FloatParamUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FloatParamUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const FloatParamUpdate* internal_default_instance() {
    return reinterpret_cast<const FloatParamUpdate*>(
               &_FloatParamUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(FloatParamUpdate& a, FloatParamUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(FloatParamUpdate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FloatParamUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FloatParamUpdate* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FloatParamUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FloatParamUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FloatParamUpdate& from) {
    FloatParamUpdate::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FloatParamUpdate* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.component_information.FloatParamUpdate";
  }
  protected:
  explicit FloatParamUpdate(::google::protobuf::Arena* arena);
  FloatParamUpdate(::google::protobuf::Arena* arena, const FloatParamUpdate& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // float value = 2;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.component_information.FloatParamUpdate)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    float value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_5finformation_2fcomponent_5finformation_2eproto;
};// -------------------------------------------------------------------

class FloatParam final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.component_information.FloatParam) */ {
 public:
  inline FloatParam() : FloatParam(nullptr) {}
  ~FloatParam() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FloatParam(::google::protobuf::internal::ConstantInitialized);

  inline FloatParam(const FloatParam& from)
      : FloatParam(nullptr, from) {}
  FloatParam(FloatParam&& from) noexcept
    : FloatParam() {
    *this = ::std::move(from);
  }

  inline FloatParam& operator=(const FloatParam& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatParam& operator=(FloatParam&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FloatParam& default_instance() {
    return *internal_default_instance();
  }
  static inline const FloatParam* internal_default_instance() {
    return reinterpret_cast<const FloatParam*>(
               &_FloatParam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(FloatParam& a, FloatParam& b) {
    a.Swap(&b);
  }
  inline void Swap(FloatParam* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FloatParam* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FloatParam* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FloatParam>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FloatParam& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FloatParam& from) {
    FloatParam::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FloatParam* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.component_information.FloatParam";
  }
  protected:
  explicit FloatParam(::google::protobuf::Arena* arena);
  FloatParam(::google::protobuf::Arena* arena, const FloatParam& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kShortDescriptionFieldNumber = 2,
    kLongDescriptionFieldNumber = 3,
    kUnitFieldNumber = 4,
    kDecimalPlacesFieldNumber = 5,
    kStartValueFieldNumber = 6,
    kDefaultValueFieldNumber = 7,
    kMinValueFieldNumber = 8,
    kMaxValueFieldNumber = 9,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string short_description = 2;
  void clear_short_description() ;
  const std::string& short_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_short_description(Arg_&& arg, Args_... args);
  std::string* mutable_short_description();
  PROTOBUF_NODISCARD std::string* release_short_description();
  void set_allocated_short_description(std::string* value);

  private:
  const std::string& _internal_short_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_short_description(
      const std::string& value);
  std::string* _internal_mutable_short_description();

  public:
  // string long_description = 3;
  void clear_long_description() ;
  const std::string& long_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_long_description(Arg_&& arg, Args_... args);
  std::string* mutable_long_description();
  PROTOBUF_NODISCARD std::string* release_long_description();
  void set_allocated_long_description(std::string* value);

  private:
  const std::string& _internal_long_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_long_description(
      const std::string& value);
  std::string* _internal_mutable_long_description();

  public:
  // string unit = 4;
  void clear_unit() ;
  const std::string& unit() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_unit(Arg_&& arg, Args_... args);
  std::string* mutable_unit();
  PROTOBUF_NODISCARD std::string* release_unit();
  void set_allocated_unit(std::string* value);

  private:
  const std::string& _internal_unit() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_unit(
      const std::string& value);
  std::string* _internal_mutable_unit();

  public:
  // int32 decimal_places = 5;
  void clear_decimal_places() ;
  ::int32_t decimal_places() const;
  void set_decimal_places(::int32_t value);

  private:
  ::int32_t _internal_decimal_places() const;
  void _internal_set_decimal_places(::int32_t value);

  public:
  // float start_value = 6;
  void clear_start_value() ;
  float start_value() const;
  void set_start_value(float value);

  private:
  float _internal_start_value() const;
  void _internal_set_start_value(float value);

  public:
  // float default_value = 7;
  void clear_default_value() ;
  float default_value() const;
  void set_default_value(float value);

  private:
  float _internal_default_value() const;
  void _internal_set_default_value(float value);

  public:
  // float min_value = 8;
  void clear_min_value() ;
  float min_value() const;
  void set_min_value(float value);

  private:
  float _internal_min_value() const;
  void _internal_set_min_value(float value);

  public:
  // float max_value = 9;
  void clear_max_value() ;
  float max_value() const;
  void set_max_value(float value);

  private:
  float _internal_max_value() const;
  void _internal_set_max_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.component_information.FloatParam)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      101, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr short_description_;
    ::google::protobuf::internal::ArenaStringPtr long_description_;
    ::google::protobuf::internal::ArenaStringPtr unit_;
    ::int32_t decimal_places_;
    float start_value_;
    float default_value_;
    float min_value_;
    float max_value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_5finformation_2fcomponent_5finformation_2eproto;
};// -------------------------------------------------------------------

class ComponentInformationResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.component_information.ComponentInformationResult) */ {
 public:
  inline ComponentInformationResult() : ComponentInformationResult(nullptr) {}
  ~ComponentInformationResult() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ComponentInformationResult(::google::protobuf::internal::ConstantInitialized);

  inline ComponentInformationResult(const ComponentInformationResult& from)
      : ComponentInformationResult(nullptr, from) {}
  ComponentInformationResult(ComponentInformationResult&& from) noexcept
    : ComponentInformationResult() {
    *this = ::std::move(from);
  }

  inline ComponentInformationResult& operator=(const ComponentInformationResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentInformationResult& operator=(ComponentInformationResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComponentInformationResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComponentInformationResult* internal_default_instance() {
    return reinterpret_cast<const ComponentInformationResult*>(
               &_ComponentInformationResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ComponentInformationResult& a, ComponentInformationResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ComponentInformationResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComponentInformationResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComponentInformationResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ComponentInformationResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ComponentInformationResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ComponentInformationResult& from) {
    ComponentInformationResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ComponentInformationResult* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.component_information.ComponentInformationResult";
  }
  protected:
  explicit ComponentInformationResult(::google::protobuf::Arena* arena);
  ComponentInformationResult(::google::protobuf::Arena* arena, const ComponentInformationResult& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Result = ComponentInformationResult_Result;
  static constexpr Result RESULT_UNKNOWN = ComponentInformationResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS = ComponentInformationResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_NO_SYSTEM = ComponentInformationResult_Result_RESULT_NO_SYSTEM;
  static inline bool Result_IsValid(int value) {
    return ComponentInformationResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN = ComponentInformationResult_Result_Result_MIN;
  static constexpr Result Result_MAX = ComponentInformationResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE = ComponentInformationResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Result_descriptor() {
    return ComponentInformationResult_Result_descriptor();
  }
  template <typename T>
  static inline const std::string& Result_Name(T value) {
    return ComponentInformationResult_Result_Name(value);
  }
  static inline bool Result_Parse(absl::string_view name, Result* value) {
    return ComponentInformationResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str() ;
  const std::string& result_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_str(Arg_&& arg, Args_... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* value);

  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(
      const std::string& value);
  std::string* _internal_mutable_result_str();

  public:
  // .mavsdk.rpc.component_information.ComponentInformationResult.Result result = 1;
  void clear_result() ;
  ::mavsdk::rpc::component_information::ComponentInformationResult_Result result() const;
  void set_result(::mavsdk::rpc::component_information::ComponentInformationResult_Result value);

  private:
  ::mavsdk::rpc::component_information::ComponentInformationResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::component_information::ComponentInformationResult_Result value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.component_information.ComponentInformationResult)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      78, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_str_;
    int result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_5finformation_2fcomponent_5finformation_2eproto;
};// -------------------------------------------------------------------

class AccessFloatParamsRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.component_information.AccessFloatParamsRequest) */ {
 public:
  inline AccessFloatParamsRequest() : AccessFloatParamsRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AccessFloatParamsRequest(::google::protobuf::internal::ConstantInitialized);

  inline AccessFloatParamsRequest(const AccessFloatParamsRequest& from)
      : AccessFloatParamsRequest(nullptr, from) {}
  AccessFloatParamsRequest(AccessFloatParamsRequest&& from) noexcept
    : AccessFloatParamsRequest() {
    *this = ::std::move(from);
  }

  inline AccessFloatParamsRequest& operator=(const AccessFloatParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccessFloatParamsRequest& operator=(AccessFloatParamsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AccessFloatParamsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AccessFloatParamsRequest* internal_default_instance() {
    return reinterpret_cast<const AccessFloatParamsRequest*>(
               &_AccessFloatParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AccessFloatParamsRequest& a, AccessFloatParamsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AccessFloatParamsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccessFloatParamsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AccessFloatParamsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AccessFloatParamsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AccessFloatParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AccessFloatParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.component_information.AccessFloatParamsRequest";
  }
  protected:
  explicit AccessFloatParamsRequest(::google::protobuf::Arena* arena);
  AccessFloatParamsRequest(::google::protobuf::Arena* arena, const AccessFloatParamsRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.component_information.AccessFloatParamsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_component_5finformation_2fcomponent_5finformation_2eproto;
};// -------------------------------------------------------------------

class FloatParamResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.component_information.FloatParamResponse) */ {
 public:
  inline FloatParamResponse() : FloatParamResponse(nullptr) {}
  ~FloatParamResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FloatParamResponse(::google::protobuf::internal::ConstantInitialized);

  inline FloatParamResponse(const FloatParamResponse& from)
      : FloatParamResponse(nullptr, from) {}
  FloatParamResponse(FloatParamResponse&& from) noexcept
    : FloatParamResponse() {
    *this = ::std::move(from);
  }

  inline FloatParamResponse& operator=(const FloatParamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatParamResponse& operator=(FloatParamResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FloatParamResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FloatParamResponse* internal_default_instance() {
    return reinterpret_cast<const FloatParamResponse*>(
               &_FloatParamResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(FloatParamResponse& a, FloatParamResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FloatParamResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FloatParamResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FloatParamResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FloatParamResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FloatParamResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FloatParamResponse& from) {
    FloatParamResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FloatParamResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.component_information.FloatParamResponse";
  }
  protected:
  explicit FloatParamResponse(::google::protobuf::Arena* arena);
  FloatParamResponse(::google::protobuf::Arena* arena, const FloatParamResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamUpdateFieldNumber = 1,
  };
  // .mavsdk.rpc.component_information.FloatParamUpdate param_update = 1;
  bool has_param_update() const;
  void clear_param_update() ;
  const ::mavsdk::rpc::component_information::FloatParamUpdate& param_update() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::component_information::FloatParamUpdate* release_param_update();
  ::mavsdk::rpc::component_information::FloatParamUpdate* mutable_param_update();
  void set_allocated_param_update(::mavsdk::rpc::component_information::FloatParamUpdate* value);
  void unsafe_arena_set_allocated_param_update(::mavsdk::rpc::component_information::FloatParamUpdate* value);
  ::mavsdk::rpc::component_information::FloatParamUpdate* unsafe_arena_release_param_update();

  private:
  const ::mavsdk::rpc::component_information::FloatParamUpdate& _internal_param_update() const;
  ::mavsdk::rpc::component_information::FloatParamUpdate* _internal_mutable_param_update();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.component_information.FloatParamResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::component_information::FloatParamUpdate* param_update_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_5finformation_2fcomponent_5finformation_2eproto;
};// -------------------------------------------------------------------

class AccessFloatParamsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.component_information.AccessFloatParamsResponse) */ {
 public:
  inline AccessFloatParamsResponse() : AccessFloatParamsResponse(nullptr) {}
  ~AccessFloatParamsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AccessFloatParamsResponse(::google::protobuf::internal::ConstantInitialized);

  inline AccessFloatParamsResponse(const AccessFloatParamsResponse& from)
      : AccessFloatParamsResponse(nullptr, from) {}
  AccessFloatParamsResponse(AccessFloatParamsResponse&& from) noexcept
    : AccessFloatParamsResponse() {
    *this = ::std::move(from);
  }

  inline AccessFloatParamsResponse& operator=(const AccessFloatParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccessFloatParamsResponse& operator=(AccessFloatParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AccessFloatParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AccessFloatParamsResponse* internal_default_instance() {
    return reinterpret_cast<const AccessFloatParamsResponse*>(
               &_AccessFloatParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AccessFloatParamsResponse& a, AccessFloatParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AccessFloatParamsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccessFloatParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AccessFloatParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AccessFloatParamsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AccessFloatParamsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AccessFloatParamsResponse& from) {
    AccessFloatParamsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AccessFloatParamsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.component_information.AccessFloatParamsResponse";
  }
  protected:
  explicit AccessFloatParamsResponse(::google::protobuf::Arena* arena);
  AccessFloatParamsResponse(::google::protobuf::Arena* arena, const AccessFloatParamsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 2,
    kComponentInformationResultFieldNumber = 1,
  };
  // repeated .mavsdk.rpc.component_information.FloatParam params = 2;
  int params_size() const;
  private:
  int _internal_params_size() const;

  public:
  void clear_params() ;
  ::mavsdk::rpc::component_information::FloatParam* mutable_params(int index);
  ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::component_information::FloatParam >*
      mutable_params();
  private:
  const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::component_information::FloatParam>& _internal_params() const;
  ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::component_information::FloatParam>* _internal_mutable_params();
  public:
  const ::mavsdk::rpc::component_information::FloatParam& params(int index) const;
  ::mavsdk::rpc::component_information::FloatParam* add_params();
  const ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::component_information::FloatParam >&
      params() const;
  // .mavsdk.rpc.component_information.ComponentInformationResult component_information_result = 1;
  bool has_component_information_result() const;
  void clear_component_information_result() ;
  const ::mavsdk::rpc::component_information::ComponentInformationResult& component_information_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::component_information::ComponentInformationResult* release_component_information_result();
  ::mavsdk::rpc::component_information::ComponentInformationResult* mutable_component_information_result();
  void set_allocated_component_information_result(::mavsdk::rpc::component_information::ComponentInformationResult* value);
  void unsafe_arena_set_allocated_component_information_result(::mavsdk::rpc::component_information::ComponentInformationResult* value);
  ::mavsdk::rpc::component_information::ComponentInformationResult* unsafe_arena_release_component_information_result();

  private:
  const ::mavsdk::rpc::component_information::ComponentInformationResult& _internal_component_information_result() const;
  ::mavsdk::rpc::component_information::ComponentInformationResult* _internal_mutable_component_information_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.component_information.AccessFloatParamsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::mavsdk::rpc::component_information::FloatParam > params_;
    ::mavsdk::rpc::component_information::ComponentInformationResult* component_information_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_5finformation_2fcomponent_5finformation_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FloatParam

// string name = 1;
inline void FloatParam::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& FloatParam::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.FloatParam.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FloatParam::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_information.FloatParam.name)
}
inline std::string* FloatParam::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.component_information.FloatParam.name)
  return _s;
}
inline const std::string& FloatParam::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void FloatParam::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* FloatParam::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* FloatParam::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.component_information.FloatParam.name)
  return _impl_.name_.Release();
}
inline void FloatParam::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.component_information.FloatParam.name)
}

// string short_description = 2;
inline void FloatParam::clear_short_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.short_description_.ClearToEmpty();
}
inline const std::string& FloatParam::short_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.FloatParam.short_description)
  return _internal_short_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FloatParam::set_short_description(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.short_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_information.FloatParam.short_description)
}
inline std::string* FloatParam::mutable_short_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_short_description();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.component_information.FloatParam.short_description)
  return _s;
}
inline const std::string& FloatParam::_internal_short_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.short_description_.Get();
}
inline void FloatParam::_internal_set_short_description(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.short_description_.Set(value, GetArena());
}
inline std::string* FloatParam::_internal_mutable_short_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.short_description_.Mutable( GetArena());
}
inline std::string* FloatParam::release_short_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.component_information.FloatParam.short_description)
  return _impl_.short_description_.Release();
}
inline void FloatParam::set_allocated_short_description(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.short_description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.short_description_.IsDefault()) {
          _impl_.short_description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.component_information.FloatParam.short_description)
}

// string long_description = 3;
inline void FloatParam::clear_long_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.long_description_.ClearToEmpty();
}
inline const std::string& FloatParam::long_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.FloatParam.long_description)
  return _internal_long_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FloatParam::set_long_description(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.long_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_information.FloatParam.long_description)
}
inline std::string* FloatParam::mutable_long_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_long_description();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.component_information.FloatParam.long_description)
  return _s;
}
inline const std::string& FloatParam::_internal_long_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.long_description_.Get();
}
inline void FloatParam::_internal_set_long_description(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.long_description_.Set(value, GetArena());
}
inline std::string* FloatParam::_internal_mutable_long_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.long_description_.Mutable( GetArena());
}
inline std::string* FloatParam::release_long_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.component_information.FloatParam.long_description)
  return _impl_.long_description_.Release();
}
inline void FloatParam::set_allocated_long_description(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.long_description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.long_description_.IsDefault()) {
          _impl_.long_description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.component_information.FloatParam.long_description)
}

// string unit = 4;
inline void FloatParam::clear_unit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.unit_.ClearToEmpty();
}
inline const std::string& FloatParam::unit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.FloatParam.unit)
  return _internal_unit();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FloatParam::set_unit(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.unit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_information.FloatParam.unit)
}
inline std::string* FloatParam::mutable_unit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_unit();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.component_information.FloatParam.unit)
  return _s;
}
inline const std::string& FloatParam::_internal_unit() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.unit_.Get();
}
inline void FloatParam::_internal_set_unit(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.unit_.Set(value, GetArena());
}
inline std::string* FloatParam::_internal_mutable_unit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.unit_.Mutable( GetArena());
}
inline std::string* FloatParam::release_unit() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.component_information.FloatParam.unit)
  return _impl_.unit_.Release();
}
inline void FloatParam::set_allocated_unit(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.unit_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.unit_.IsDefault()) {
          _impl_.unit_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.component_information.FloatParam.unit)
}

// int32 decimal_places = 5;
inline void FloatParam::clear_decimal_places() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.decimal_places_ = 0;
}
inline ::int32_t FloatParam::decimal_places() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.FloatParam.decimal_places)
  return _internal_decimal_places();
}
inline void FloatParam::set_decimal_places(::int32_t value) {
  _internal_set_decimal_places(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_information.FloatParam.decimal_places)
}
inline ::int32_t FloatParam::_internal_decimal_places() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.decimal_places_;
}
inline void FloatParam::_internal_set_decimal_places(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.decimal_places_ = value;
}

// float start_value = 6;
inline void FloatParam::clear_start_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_value_ = 0;
}
inline float FloatParam::start_value() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.FloatParam.start_value)
  return _internal_start_value();
}
inline void FloatParam::set_start_value(float value) {
  _internal_set_start_value(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_information.FloatParam.start_value)
}
inline float FloatParam::_internal_start_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.start_value_;
}
inline void FloatParam::_internal_set_start_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.start_value_ = value;
}

// float default_value = 7;
inline void FloatParam::clear_default_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.default_value_ = 0;
}
inline float FloatParam::default_value() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.FloatParam.default_value)
  return _internal_default_value();
}
inline void FloatParam::set_default_value(float value) {
  _internal_set_default_value(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_information.FloatParam.default_value)
}
inline float FloatParam::_internal_default_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.default_value_;
}
inline void FloatParam::_internal_set_default_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.default_value_ = value;
}

// float min_value = 8;
inline void FloatParam::clear_min_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.min_value_ = 0;
}
inline float FloatParam::min_value() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.FloatParam.min_value)
  return _internal_min_value();
}
inline void FloatParam::set_min_value(float value) {
  _internal_set_min_value(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_information.FloatParam.min_value)
}
inline float FloatParam::_internal_min_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.min_value_;
}
inline void FloatParam::_internal_set_min_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.min_value_ = value;
}

// float max_value = 9;
inline void FloatParam::clear_max_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_value_ = 0;
}
inline float FloatParam::max_value() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.FloatParam.max_value)
  return _internal_max_value();
}
inline void FloatParam::set_max_value(float value) {
  _internal_set_max_value(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_information.FloatParam.max_value)
}
inline float FloatParam::_internal_max_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_value_;
}
inline void FloatParam::_internal_set_max_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_value_ = value;
}

// -------------------------------------------------------------------

// AccessFloatParamsRequest

// -------------------------------------------------------------------

// AccessFloatParamsResponse

// .mavsdk.rpc.component_information.ComponentInformationResult component_information_result = 1;
inline bool AccessFloatParamsResponse::has_component_information_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.component_information_result_ != nullptr);
  return value;
}
inline void AccessFloatParamsResponse::clear_component_information_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.component_information_result_ != nullptr) _impl_.component_information_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::component_information::ComponentInformationResult& AccessFloatParamsResponse::_internal_component_information_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::component_information::ComponentInformationResult* p = _impl_.component_information_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::component_information::ComponentInformationResult&>(::mavsdk::rpc::component_information::_ComponentInformationResult_default_instance_);
}
inline const ::mavsdk::rpc::component_information::ComponentInformationResult& AccessFloatParamsResponse::component_information_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.AccessFloatParamsResponse.component_information_result)
  return _internal_component_information_result();
}
inline void AccessFloatParamsResponse::unsafe_arena_set_allocated_component_information_result(::mavsdk::rpc::component_information::ComponentInformationResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.component_information_result_);
  }
  _impl_.component_information_result_ = reinterpret_cast<::mavsdk::rpc::component_information::ComponentInformationResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.component_information.AccessFloatParamsResponse.component_information_result)
}
inline ::mavsdk::rpc::component_information::ComponentInformationResult* AccessFloatParamsResponse::release_component_information_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::component_information::ComponentInformationResult* released = _impl_.component_information_result_;
  _impl_.component_information_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::component_information::ComponentInformationResult* AccessFloatParamsResponse::unsafe_arena_release_component_information_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.component_information.AccessFloatParamsResponse.component_information_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::component_information::ComponentInformationResult* temp = _impl_.component_information_result_;
  _impl_.component_information_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::component_information::ComponentInformationResult* AccessFloatParamsResponse::_internal_mutable_component_information_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.component_information_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::component_information::ComponentInformationResult>(GetArena());
    _impl_.component_information_result_ = reinterpret_cast<::mavsdk::rpc::component_information::ComponentInformationResult*>(p);
  }
  return _impl_.component_information_result_;
}
inline ::mavsdk::rpc::component_information::ComponentInformationResult* AccessFloatParamsResponse::mutable_component_information_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::component_information::ComponentInformationResult* _msg = _internal_mutable_component_information_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.component_information.AccessFloatParamsResponse.component_information_result)
  return _msg;
}
inline void AccessFloatParamsResponse::set_allocated_component_information_result(::mavsdk::rpc::component_information::ComponentInformationResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::component_information::ComponentInformationResult*>(_impl_.component_information_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::component_information::ComponentInformationResult*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.component_information_result_ = reinterpret_cast<::mavsdk::rpc::component_information::ComponentInformationResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.component_information.AccessFloatParamsResponse.component_information_result)
}

// repeated .mavsdk.rpc.component_information.FloatParam params = 2;
inline int AccessFloatParamsResponse::_internal_params_size() const {
  return _internal_params().size();
}
inline int AccessFloatParamsResponse::params_size() const {
  return _internal_params_size();
}
inline void AccessFloatParamsResponse::clear_params() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.params_.Clear();
}
inline ::mavsdk::rpc::component_information::FloatParam* AccessFloatParamsResponse::mutable_params(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.component_information.AccessFloatParamsResponse.params)
  return _internal_mutable_params()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::component_information::FloatParam>* AccessFloatParamsResponse::mutable_params()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mavsdk.rpc.component_information.AccessFloatParamsResponse.params)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_params();
}
inline const ::mavsdk::rpc::component_information::FloatParam& AccessFloatParamsResponse::params(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.AccessFloatParamsResponse.params)
  return _internal_params().Get(index);
}
inline ::mavsdk::rpc::component_information::FloatParam* AccessFloatParamsResponse::add_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::mavsdk::rpc::component_information::FloatParam* _add = _internal_mutable_params()->Add();
  // @@protoc_insertion_point(field_add:mavsdk.rpc.component_information.AccessFloatParamsResponse.params)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::component_information::FloatParam>& AccessFloatParamsResponse::params() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mavsdk.rpc.component_information.AccessFloatParamsResponse.params)
  return _internal_params();
}
inline const ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::component_information::FloatParam>&
AccessFloatParamsResponse::_internal_params() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.params_;
}
inline ::google::protobuf::RepeatedPtrField<::mavsdk::rpc::component_information::FloatParam>*
AccessFloatParamsResponse::_internal_mutable_params() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.params_;
}

// -------------------------------------------------------------------

// FloatParamUpdate

// string name = 1;
inline void FloatParamUpdate::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& FloatParamUpdate::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.FloatParamUpdate.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FloatParamUpdate::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_information.FloatParamUpdate.name)
}
inline std::string* FloatParamUpdate::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.component_information.FloatParamUpdate.name)
  return _s;
}
inline const std::string& FloatParamUpdate::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void FloatParamUpdate::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* FloatParamUpdate::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* FloatParamUpdate::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.component_information.FloatParamUpdate.name)
  return _impl_.name_.Release();
}
inline void FloatParamUpdate::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.component_information.FloatParamUpdate.name)
}

// float value = 2;
inline void FloatParamUpdate::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = 0;
}
inline float FloatParamUpdate::value() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.FloatParamUpdate.value)
  return _internal_value();
}
inline void FloatParamUpdate::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_information.FloatParamUpdate.value)
}
inline float FloatParamUpdate::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void FloatParamUpdate::_internal_set_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// SubscribeFloatParamRequest

// -------------------------------------------------------------------

// FloatParamResponse

// .mavsdk.rpc.component_information.FloatParamUpdate param_update = 1;
inline bool FloatParamResponse::has_param_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.param_update_ != nullptr);
  return value;
}
inline void FloatParamResponse::clear_param_update() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.param_update_ != nullptr) _impl_.param_update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::component_information::FloatParamUpdate& FloatParamResponse::_internal_param_update() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::component_information::FloatParamUpdate* p = _impl_.param_update_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::component_information::FloatParamUpdate&>(::mavsdk::rpc::component_information::_FloatParamUpdate_default_instance_);
}
inline const ::mavsdk::rpc::component_information::FloatParamUpdate& FloatParamResponse::param_update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.FloatParamResponse.param_update)
  return _internal_param_update();
}
inline void FloatParamResponse::unsafe_arena_set_allocated_param_update(::mavsdk::rpc::component_information::FloatParamUpdate* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.param_update_);
  }
  _impl_.param_update_ = reinterpret_cast<::mavsdk::rpc::component_information::FloatParamUpdate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.component_information.FloatParamResponse.param_update)
}
inline ::mavsdk::rpc::component_information::FloatParamUpdate* FloatParamResponse::release_param_update() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::component_information::FloatParamUpdate* released = _impl_.param_update_;
  _impl_.param_update_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::component_information::FloatParamUpdate* FloatParamResponse::unsafe_arena_release_param_update() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.component_information.FloatParamResponse.param_update)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::component_information::FloatParamUpdate* temp = _impl_.param_update_;
  _impl_.param_update_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::component_information::FloatParamUpdate* FloatParamResponse::_internal_mutable_param_update() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.param_update_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::component_information::FloatParamUpdate>(GetArena());
    _impl_.param_update_ = reinterpret_cast<::mavsdk::rpc::component_information::FloatParamUpdate*>(p);
  }
  return _impl_.param_update_;
}
inline ::mavsdk::rpc::component_information::FloatParamUpdate* FloatParamResponse::mutable_param_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::component_information::FloatParamUpdate* _msg = _internal_mutable_param_update();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.component_information.FloatParamResponse.param_update)
  return _msg;
}
inline void FloatParamResponse::set_allocated_param_update(::mavsdk::rpc::component_information::FloatParamUpdate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::component_information::FloatParamUpdate*>(_impl_.param_update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::component_information::FloatParamUpdate*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.param_update_ = reinterpret_cast<::mavsdk::rpc::component_information::FloatParamUpdate*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.component_information.FloatParamResponse.param_update)
}

// -------------------------------------------------------------------

// ComponentInformationResult

// .mavsdk.rpc.component_information.ComponentInformationResult.Result result = 1;
inline void ComponentInformationResult::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = 0;
}
inline ::mavsdk::rpc::component_information::ComponentInformationResult_Result ComponentInformationResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.ComponentInformationResult.result)
  return _internal_result();
}
inline void ComponentInformationResult::set_result(::mavsdk::rpc::component_information::ComponentInformationResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_information.ComponentInformationResult.result)
}
inline ::mavsdk::rpc::component_information::ComponentInformationResult_Result ComponentInformationResult::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::component_information::ComponentInformationResult_Result>(_impl_.result_);
}
inline void ComponentInformationResult::_internal_set_result(::mavsdk::rpc::component_information::ComponentInformationResult_Result value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// string result_str = 2;
inline void ComponentInformationResult::clear_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.ClearToEmpty();
}
inline const std::string& ComponentInformationResult::result_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.component_information.ComponentInformationResult.result_str)
  return _internal_result_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentInformationResult::set_result_str(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.component_information.ComponentInformationResult.result_str)
}
inline std::string* ComponentInformationResult::mutable_result_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.component_information.ComponentInformationResult.result_str)
  return _s;
}
inline const std::string& ComponentInformationResult::_internal_result_str() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_str_.Get();
}
inline void ComponentInformationResult::_internal_set_result_str(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(value, GetArena());
}
inline std::string* ComponentInformationResult::_internal_mutable_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_str_.Mutable( GetArena());
}
inline std::string* ComponentInformationResult::release_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.component_information.ComponentInformationResult.result_str)
  return _impl_.result_str_.Release();
}
inline void ComponentInformationResult::set_allocated_result_str(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_str_.IsDefault()) {
          _impl_.result_str_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.component_information.ComponentInformationResult.result_str)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace component_information
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::component_information::ComponentInformationResult_Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::component_information::ComponentInformationResult_Result>() {
  return ::mavsdk::rpc::component_information::ComponentInformationResult_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_component_5finformation_2fcomponent_5finformation_2eproto_2epb_2eh
