// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: lumos_server/lumos_server.proto
#ifndef GRPC_lumos_5fserver_2flumos_5fserver_2eproto__INCLUDED
#define GRPC_lumos_5fserver_2flumos_5fserver_2eproto__INCLUDED

#include "lumos_server/lumos_server.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace mavsdk {
namespace rpc {
namespace lumos_server {

class LumosServerService final {
 public:
  static constexpr char const* service_full_name() {
    return "mavsdk.rpc.lumos_server.LumosServerService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status SetDroneInfo(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest& request, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>> AsyncSetDroneInfo(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>>(AsyncSetDroneInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>> PrepareAsyncSetDroneInfo(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>>(PrepareAsyncSetDroneInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status SetCompanionStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest& request, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>> AsyncSetCompanionStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>>(AsyncSetCompanionStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>> PrepareAsyncSetCompanionStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>>(PrepareAsyncSetCompanionStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::DanceResponse>> SubscribeDance(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::DanceResponse>>(SubscribeDanceRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::DanceResponse>> AsyncSubscribeDance(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::DanceResponse>>(AsyncSubscribeDanceRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::DanceResponse>> PrepareAsyncSubscribeDance(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::DanceResponse>>(PrepareAsyncSubscribeDanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::ParamsResponse>> SubscribeParams(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::ParamsResponse>>(SubscribeParamsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::ParamsResponse>> AsyncSubscribeParams(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::ParamsResponse>>(AsyncSubscribeParamsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::ParamsResponse>> PrepareAsyncSubscribeParams(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::ParamsResponse>>(PrepareAsyncSubscribeParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::StartResponse>> SubscribeStart(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::StartResponse>>(SubscribeStartRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::StartResponse>> AsyncSubscribeStart(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::StartResponse>>(AsyncSubscribeStartRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::StartResponse>> PrepareAsyncSubscribeStart(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::StartResponse>>(PrepareAsyncSubscribeStartRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::LocalPosResponse>> SubscribeLocalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::LocalPosResponse>>(SubscribeLocalPosRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::LocalPosResponse>> AsyncSubscribeLocalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::LocalPosResponse>>(AsyncSubscribeLocalPosRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::LocalPosResponse>> PrepareAsyncSubscribeLocalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::LocalPosResponse>>(PrepareAsyncSubscribeLocalPosRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::GlobalPosResponse>> SubscribeGlobalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::GlobalPosResponse>>(SubscribeGlobalPosRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::GlobalPosResponse>> AsyncSubscribeGlobalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::GlobalPosResponse>>(AsyncSubscribeGlobalPosRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::GlobalPosResponse>> PrepareAsyncSubscribeGlobalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::GlobalPosResponse>>(PrepareAsyncSubscribeGlobalPosRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::LandCmdResponse>> SubscribeLandCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::LandCmdResponse>>(SubscribeLandCmdRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::LandCmdResponse>> AsyncSubscribeLandCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::LandCmdResponse>>(AsyncSubscribeLandCmdRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::LandCmdResponse>> PrepareAsyncSubscribeLandCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::LandCmdResponse>>(PrepareAsyncSubscribeLandCmdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::RtlCmdResponse>> SubscribeRtlCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::RtlCmdResponse>>(SubscribeRtlCmdRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::RtlCmdResponse>> AsyncSubscribeRtlCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::RtlCmdResponse>>(AsyncSubscribeRtlCmdRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::RtlCmdResponse>> PrepareAsyncSubscribeRtlCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::RtlCmdResponse>>(PrepareAsyncSubscribeRtlCmdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::KillCmdResponse>> SubscribeKillCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::KillCmdResponse>>(SubscribeKillCmdRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::KillCmdResponse>> AsyncSubscribeKillCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::KillCmdResponse>>(AsyncSubscribeKillCmdRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::KillCmdResponse>> PrepareAsyncSubscribeKillCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::KillCmdResponse>>(PrepareAsyncSubscribeKillCmdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>> SubscribeColorLedCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>>(SubscribeColorLedCmdRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>> AsyncSubscribeColorLedCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>>(AsyncSubscribeColorLedCmdRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>> PrepareAsyncSubscribeColorLedCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>>(PrepareAsyncSubscribeColorLedCmdRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void SetDroneInfo(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* request, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetDroneInfo(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* request, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetCompanionStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* request, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetCompanionStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* request, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SubscribeDance(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::DanceResponse>* reactor) = 0;
      virtual void SubscribeParams(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::ParamsResponse>* reactor) = 0;
      virtual void SubscribeStart(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::StartResponse>* reactor) = 0;
      virtual void SubscribeLocalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::LocalPosResponse>* reactor) = 0;
      virtual void SubscribeGlobalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* reactor) = 0;
      virtual void SubscribeLandCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::LandCmdResponse>* reactor) = 0;
      virtual void SubscribeRtlCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* reactor) = 0;
      virtual void SubscribeKillCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::KillCmdResponse>* reactor) = 0;
      virtual void SubscribeColorLedCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>* AsyncSetDroneInfoRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>* PrepareAsyncSetDroneInfoRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>* AsyncSetCompanionStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>* PrepareAsyncSetCompanionStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::DanceResponse>* SubscribeDanceRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::DanceResponse>* AsyncSubscribeDanceRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::DanceResponse>* PrepareAsyncSubscribeDanceRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::ParamsResponse>* SubscribeParamsRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::ParamsResponse>* AsyncSubscribeParamsRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::ParamsResponse>* PrepareAsyncSubscribeParamsRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::StartResponse>* SubscribeStartRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::StartResponse>* AsyncSubscribeStartRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::StartResponse>* PrepareAsyncSubscribeStartRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::LocalPosResponse>* SubscribeLocalPosRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::LocalPosResponse>* AsyncSubscribeLocalPosRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::LocalPosResponse>* PrepareAsyncSubscribeLocalPosRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* SubscribeGlobalPosRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* AsyncSubscribeGlobalPosRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* PrepareAsyncSubscribeGlobalPosRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::LandCmdResponse>* SubscribeLandCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::LandCmdResponse>* AsyncSubscribeLandCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::LandCmdResponse>* PrepareAsyncSubscribeLandCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* SubscribeRtlCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* AsyncSubscribeRtlCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* PrepareAsyncSubscribeRtlCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::KillCmdResponse>* SubscribeKillCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::KillCmdResponse>* AsyncSubscribeKillCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::KillCmdResponse>* PrepareAsyncSubscribeKillCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* SubscribeColorLedCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* AsyncSubscribeColorLedCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* PrepareAsyncSubscribeColorLedCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SetDroneInfo(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest& request, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>> AsyncSetDroneInfo(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>>(AsyncSetDroneInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>> PrepareAsyncSetDroneInfo(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>>(PrepareAsyncSetDroneInfoRaw(context, request, cq));
    }
    ::grpc::Status SetCompanionStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest& request, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>> AsyncSetCompanionStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>>(AsyncSetCompanionStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>> PrepareAsyncSetCompanionStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>>(PrepareAsyncSetCompanionStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::DanceResponse>> SubscribeDance(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::DanceResponse>>(SubscribeDanceRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::DanceResponse>> AsyncSubscribeDance(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::DanceResponse>>(AsyncSubscribeDanceRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::DanceResponse>> PrepareAsyncSubscribeDance(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::DanceResponse>>(PrepareAsyncSubscribeDanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::ParamsResponse>> SubscribeParams(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::ParamsResponse>>(SubscribeParamsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::ParamsResponse>> AsyncSubscribeParams(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::ParamsResponse>>(AsyncSubscribeParamsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::ParamsResponse>> PrepareAsyncSubscribeParams(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::ParamsResponse>>(PrepareAsyncSubscribeParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::StartResponse>> SubscribeStart(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::StartResponse>>(SubscribeStartRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::StartResponse>> AsyncSubscribeStart(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::StartResponse>>(AsyncSubscribeStartRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::StartResponse>> PrepareAsyncSubscribeStart(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::StartResponse>>(PrepareAsyncSubscribeStartRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::LocalPosResponse>> SubscribeLocalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::LocalPosResponse>>(SubscribeLocalPosRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::LocalPosResponse>> AsyncSubscribeLocalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::LocalPosResponse>>(AsyncSubscribeLocalPosRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::LocalPosResponse>> PrepareAsyncSubscribeLocalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::LocalPosResponse>>(PrepareAsyncSubscribeLocalPosRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::GlobalPosResponse>> SubscribeGlobalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::GlobalPosResponse>>(SubscribeGlobalPosRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::GlobalPosResponse>> AsyncSubscribeGlobalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::GlobalPosResponse>>(AsyncSubscribeGlobalPosRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::GlobalPosResponse>> PrepareAsyncSubscribeGlobalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::GlobalPosResponse>>(PrepareAsyncSubscribeGlobalPosRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::LandCmdResponse>> SubscribeLandCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::LandCmdResponse>>(SubscribeLandCmdRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::LandCmdResponse>> AsyncSubscribeLandCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::LandCmdResponse>>(AsyncSubscribeLandCmdRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::LandCmdResponse>> PrepareAsyncSubscribeLandCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::LandCmdResponse>>(PrepareAsyncSubscribeLandCmdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::RtlCmdResponse>> SubscribeRtlCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::RtlCmdResponse>>(SubscribeRtlCmdRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::RtlCmdResponse>> AsyncSubscribeRtlCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::RtlCmdResponse>>(AsyncSubscribeRtlCmdRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::RtlCmdResponse>> PrepareAsyncSubscribeRtlCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::RtlCmdResponse>>(PrepareAsyncSubscribeRtlCmdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::KillCmdResponse>> SubscribeKillCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::KillCmdResponse>>(SubscribeKillCmdRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::KillCmdResponse>> AsyncSubscribeKillCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::KillCmdResponse>>(AsyncSubscribeKillCmdRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::KillCmdResponse>> PrepareAsyncSubscribeKillCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::KillCmdResponse>>(PrepareAsyncSubscribeKillCmdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>> SubscribeColorLedCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>>(SubscribeColorLedCmdRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>> AsyncSubscribeColorLedCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>>(AsyncSubscribeColorLedCmdRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>> PrepareAsyncSubscribeColorLedCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>>(PrepareAsyncSubscribeColorLedCmdRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SetDroneInfo(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* request, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void SetDroneInfo(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* request, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetCompanionStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* request, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* response, std::function<void(::grpc::Status)>) override;
      void SetCompanionStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* request, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SubscribeDance(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::DanceResponse>* reactor) override;
      void SubscribeParams(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::ParamsResponse>* reactor) override;
      void SubscribeStart(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::StartResponse>* reactor) override;
      void SubscribeLocalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::LocalPosResponse>* reactor) override;
      void SubscribeGlobalPos(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* reactor) override;
      void SubscribeLandCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::LandCmdResponse>* reactor) override;
      void SubscribeRtlCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* reactor) override;
      void SubscribeKillCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::KillCmdResponse>* reactor) override;
      void SubscribeColorLedCmd(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>* AsyncSetDroneInfoRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>* PrepareAsyncSetDroneInfoRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>* AsyncSetCompanionStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>* PrepareAsyncSetCompanionStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::DanceResponse>* SubscribeDanceRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest& request) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::DanceResponse>* AsyncSubscribeDanceRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::DanceResponse>* PrepareAsyncSubscribeDanceRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::ParamsResponse>* SubscribeParamsRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest& request) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::ParamsResponse>* AsyncSubscribeParamsRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::ParamsResponse>* PrepareAsyncSubscribeParamsRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::StartResponse>* SubscribeStartRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest& request) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::StartResponse>* AsyncSubscribeStartRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::StartResponse>* PrepareAsyncSubscribeStartRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::LocalPosResponse>* SubscribeLocalPosRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest& request) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::LocalPosResponse>* AsyncSubscribeLocalPosRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::LocalPosResponse>* PrepareAsyncSubscribeLocalPosRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* SubscribeGlobalPosRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest& request) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* AsyncSubscribeGlobalPosRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* PrepareAsyncSubscribeGlobalPosRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::LandCmdResponse>* SubscribeLandCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest& request) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::LandCmdResponse>* AsyncSubscribeLandCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::LandCmdResponse>* PrepareAsyncSubscribeLandCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* SubscribeRtlCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest& request) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* AsyncSubscribeRtlCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* PrepareAsyncSubscribeRtlCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::KillCmdResponse>* SubscribeKillCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest& request) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::KillCmdResponse>* AsyncSubscribeKillCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::KillCmdResponse>* PrepareAsyncSubscribeKillCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* SubscribeColorLedCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest& request) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* AsyncSubscribeColorLedCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* PrepareAsyncSubscribeColorLedCmdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SetDroneInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_SetCompanionStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeDance_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeParams_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeStart_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeLocalPos_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeGlobalPos_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeLandCmd_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeRtlCmd_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeKillCmd_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeColorLedCmd_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status SetDroneInfo(::grpc::ServerContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* request, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* response);
    virtual ::grpc::Status SetCompanionStatus(::grpc::ServerContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* request, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* response);
    virtual ::grpc::Status SubscribeDance(::grpc::ServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::DanceResponse>* writer);
    virtual ::grpc::Status SubscribeParams(::grpc::ServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ParamsResponse>* writer);
    virtual ::grpc::Status SubscribeStart(::grpc::ServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::StartResponse>* writer);
    virtual ::grpc::Status SubscribeLocalPos(::grpc::ServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LocalPosResponse>* writer);
    virtual ::grpc::Status SubscribeGlobalPos(::grpc::ServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* writer);
    virtual ::grpc::Status SubscribeLandCmd(::grpc::ServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LandCmdResponse>* writer);
    virtual ::grpc::Status SubscribeRtlCmd(::grpc::ServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* writer);
    virtual ::grpc::Status SubscribeKillCmd(::grpc::ServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::KillCmdResponse>* writer);
    virtual ::grpc::Status SubscribeColorLedCmd(::grpc::ServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_SetDroneInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetDroneInfo() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SetDroneInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDroneInfo(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetDroneInfo(::grpc::ServerContext* context, ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetCompanionStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetCompanionStatus() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SetCompanionStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCompanionStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCompanionStatus(::grpc::ServerContext* context, ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeDance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeDance() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_SubscribeDance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeDance(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::DanceResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeDance(::grpc::ServerContext* context, ::mavsdk::rpc::lumos_server::SubscribeDanceRequest* request, ::grpc::ServerAsyncWriter< ::mavsdk::rpc::lumos_server::DanceResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeParams() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SubscribeParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeParams(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ParamsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeParams(::grpc::ServerContext* context, ::mavsdk::rpc::lumos_server::SubscribeParamsRequest* request, ::grpc::ServerAsyncWriter< ::mavsdk::rpc::lumos_server::ParamsResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeStart : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeStart() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SubscribeStart() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeStart(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::StartResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeStart(::grpc::ServerContext* context, ::mavsdk::rpc::lumos_server::SubscribeStartRequest* request, ::grpc::ServerAsyncWriter< ::mavsdk::rpc::lumos_server::StartResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeLocalPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeLocalPos() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SubscribeLocalPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLocalPos(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LocalPosResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeLocalPos(::grpc::ServerContext* context, ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest* request, ::grpc::ServerAsyncWriter< ::mavsdk::rpc::lumos_server::LocalPosResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeGlobalPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeGlobalPos() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_SubscribeGlobalPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeGlobalPos(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeGlobalPos(::grpc::ServerContext* context, ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest* request, ::grpc::ServerAsyncWriter< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(6, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeLandCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeLandCmd() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_SubscribeLandCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLandCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LandCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeLandCmd(::grpc::ServerContext* context, ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest* request, ::grpc::ServerAsyncWriter< ::mavsdk::rpc::lumos_server::LandCmdResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(7, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeRtlCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeRtlCmd() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_SubscribeRtlCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRtlCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeRtlCmd(::grpc::ServerContext* context, ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest* request, ::grpc::ServerAsyncWriter< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(8, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeKillCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeKillCmd() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_SubscribeKillCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeKillCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::KillCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeKillCmd(::grpc::ServerContext* context, ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest* request, ::grpc::ServerAsyncWriter< ::mavsdk::rpc::lumos_server::KillCmdResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(9, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeColorLedCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeColorLedCmd() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_SubscribeColorLedCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeColorLedCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeColorLedCmd(::grpc::ServerContext* context, ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest* request, ::grpc::ServerAsyncWriter< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(10, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SetDroneInfo<WithAsyncMethod_SetCompanionStatus<WithAsyncMethod_SubscribeDance<WithAsyncMethod_SubscribeParams<WithAsyncMethod_SubscribeStart<WithAsyncMethod_SubscribeLocalPos<WithAsyncMethod_SubscribeGlobalPos<WithAsyncMethod_SubscribeLandCmd<WithAsyncMethod_SubscribeRtlCmd<WithAsyncMethod_SubscribeKillCmd<WithAsyncMethod_SubscribeColorLedCmd<Service > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SetDroneInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetDroneInfo() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::lumos_server::SetDroneInfoRequest, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* request, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* response) { return this->SetDroneInfo(context, request, response); }));}
    void SetMessageAllocatorFor_SetDroneInfo(
        ::grpc::MessageAllocator< ::mavsdk::rpc::lumos_server::SetDroneInfoRequest, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::lumos_server::SetDroneInfoRequest, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetDroneInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDroneInfo(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetDroneInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetCompanionStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetCompanionStatus() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* request, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* response) { return this->SetCompanionStatus(context, request, response); }));}
    void SetMessageAllocatorFor_SetCompanionStatus(
        ::grpc::MessageAllocator< ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetCompanionStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCompanionStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetCompanionStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeDance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeDance() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::mavsdk::rpc::lumos_server::SubscribeDanceRequest, ::mavsdk::rpc::lumos_server::DanceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest* request) { return this->SubscribeDance(context, request); }));
    }
    ~WithCallbackMethod_SubscribeDance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeDance(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::DanceResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::mavsdk::rpc::lumos_server::DanceResponse>* SubscribeDance(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeParams() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::mavsdk::rpc::lumos_server::SubscribeParamsRequest, ::mavsdk::rpc::lumos_server::ParamsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest* request) { return this->SubscribeParams(context, request); }));
    }
    ~WithCallbackMethod_SubscribeParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeParams(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ParamsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::mavsdk::rpc::lumos_server::ParamsResponse>* SubscribeParams(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeStart : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeStart() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::mavsdk::rpc::lumos_server::SubscribeStartRequest, ::mavsdk::rpc::lumos_server::StartResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest* request) { return this->SubscribeStart(context, request); }));
    }
    ~WithCallbackMethod_SubscribeStart() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeStart(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::StartResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::mavsdk::rpc::lumos_server::StartResponse>* SubscribeStart(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeLocalPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeLocalPos() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest, ::mavsdk::rpc::lumos_server::LocalPosResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest* request) { return this->SubscribeLocalPos(context, request); }));
    }
    ~WithCallbackMethod_SubscribeLocalPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLocalPos(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LocalPosResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::mavsdk::rpc::lumos_server::LocalPosResponse>* SubscribeLocalPos(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeGlobalPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeGlobalPos() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackServerStreamingHandler< ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest, ::mavsdk::rpc::lumos_server::GlobalPosResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest* request) { return this->SubscribeGlobalPos(context, request); }));
    }
    ~WithCallbackMethod_SubscribeGlobalPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeGlobalPos(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* SubscribeGlobalPos(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeLandCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeLandCmd() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackServerStreamingHandler< ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest, ::mavsdk::rpc::lumos_server::LandCmdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest* request) { return this->SubscribeLandCmd(context, request); }));
    }
    ~WithCallbackMethod_SubscribeLandCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLandCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LandCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::mavsdk::rpc::lumos_server::LandCmdResponse>* SubscribeLandCmd(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeRtlCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeRtlCmd() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackServerStreamingHandler< ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest, ::mavsdk::rpc::lumos_server::RtlCmdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest* request) { return this->SubscribeRtlCmd(context, request); }));
    }
    ~WithCallbackMethod_SubscribeRtlCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRtlCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* SubscribeRtlCmd(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeKillCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeKillCmd() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackServerStreamingHandler< ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest, ::mavsdk::rpc::lumos_server::KillCmdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest* request) { return this->SubscribeKillCmd(context, request); }));
    }
    ~WithCallbackMethod_SubscribeKillCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeKillCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::KillCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::mavsdk::rpc::lumos_server::KillCmdResponse>* SubscribeKillCmd(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeColorLedCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeColorLedCmd() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackServerStreamingHandler< ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest, ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest* request) { return this->SubscribeColorLedCmd(context, request); }));
    }
    ~WithCallbackMethod_SubscribeColorLedCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeColorLedCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* SubscribeColorLedCmd(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_SetDroneInfo<WithCallbackMethod_SetCompanionStatus<WithCallbackMethod_SubscribeDance<WithCallbackMethod_SubscribeParams<WithCallbackMethod_SubscribeStart<WithCallbackMethod_SubscribeLocalPos<WithCallbackMethod_SubscribeGlobalPos<WithCallbackMethod_SubscribeLandCmd<WithCallbackMethod_SubscribeRtlCmd<WithCallbackMethod_SubscribeKillCmd<WithCallbackMethod_SubscribeColorLedCmd<Service > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SetDroneInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetDroneInfo() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SetDroneInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDroneInfo(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetCompanionStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetCompanionStatus() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SetCompanionStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCompanionStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeDance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeDance() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_SubscribeDance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeDance(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::DanceResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeParams() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SubscribeParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeParams(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ParamsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeStart : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeStart() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SubscribeStart() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeStart(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::StartResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeLocalPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeLocalPos() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SubscribeLocalPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLocalPos(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LocalPosResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeGlobalPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeGlobalPos() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_SubscribeGlobalPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeGlobalPos(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeLandCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeLandCmd() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_SubscribeLandCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLandCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LandCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeRtlCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeRtlCmd() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_SubscribeRtlCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRtlCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeKillCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeKillCmd() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_SubscribeKillCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeKillCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::KillCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeColorLedCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeColorLedCmd() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_SubscribeColorLedCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeColorLedCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetDroneInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetDroneInfo() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SetDroneInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDroneInfo(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetDroneInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetCompanionStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetCompanionStatus() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SetCompanionStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCompanionStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCompanionStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeDance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeDance() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_SubscribeDance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeDance(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::DanceResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeDance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeParams() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SubscribeParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeParams(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ParamsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeParams(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeStart : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeStart() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SubscribeStart() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeStart(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::StartResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeStart(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeLocalPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeLocalPos() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SubscribeLocalPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLocalPos(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LocalPosResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeLocalPos(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeGlobalPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeGlobalPos() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_SubscribeGlobalPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeGlobalPos(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeGlobalPos(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(6, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeLandCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeLandCmd() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_SubscribeLandCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLandCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LandCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeLandCmd(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(7, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeRtlCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeRtlCmd() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_SubscribeRtlCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRtlCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeRtlCmd(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(8, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeKillCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeKillCmd() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_SubscribeKillCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeKillCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::KillCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeKillCmd(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(9, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeColorLedCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeColorLedCmd() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_SubscribeColorLedCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeColorLedCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeColorLedCmd(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(10, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetDroneInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetDroneInfo() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetDroneInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetDroneInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDroneInfo(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetDroneInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetCompanionStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetCompanionStatus() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetCompanionStatus(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetCompanionStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCompanionStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetCompanionStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeDance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeDance() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeDance(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeDance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeDance(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::DanceResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeDance(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeParams() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeParams(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeParams(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ParamsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeParams(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeStart : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeStart() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeStart(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeStart() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeStart(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::StartResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeStart(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeLocalPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeLocalPos() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeLocalPos(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeLocalPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLocalPos(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LocalPosResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeLocalPos(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeGlobalPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeGlobalPos() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeGlobalPos(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeGlobalPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeGlobalPos(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeGlobalPos(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeLandCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeLandCmd() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeLandCmd(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeLandCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLandCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LandCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeLandCmd(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeRtlCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeRtlCmd() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeRtlCmd(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeRtlCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRtlCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeRtlCmd(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeKillCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeKillCmd() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeKillCmd(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeKillCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeKillCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::KillCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeKillCmd(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeColorLedCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeColorLedCmd() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeColorLedCmd(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeColorLedCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeColorLedCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeColorLedCmd(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetDroneInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetDroneInfo() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::lumos_server::SetDroneInfoRequest, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::lumos_server::SetDroneInfoRequest, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse>* streamer) {
                       return this->StreamedSetDroneInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetDroneInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetDroneInfo(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetDroneInfoRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetDroneInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetDroneInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::lumos_server::SetDroneInfoRequest,::mavsdk::rpc::lumos_server::SetDroneInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetCompanionStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetCompanionStatus() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>* streamer) {
                       return this->StreamedSetCompanionStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetCompanionStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetCompanionStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest* /*request*/, ::mavsdk::rpc::lumos_server::SetCompanionStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetCompanionStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::lumos_server::SetCompanionStatusRequest,::mavsdk::rpc::lumos_server::SetCompanionStatusResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SetDroneInfo<WithStreamedUnaryMethod_SetCompanionStatus<Service > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeDance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeDance() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::mavsdk::rpc::lumos_server::SubscribeDanceRequest, ::mavsdk::rpc::lumos_server::DanceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::mavsdk::rpc::lumos_server::SubscribeDanceRequest, ::mavsdk::rpc::lumos_server::DanceResponse>* streamer) {
                       return this->StreamedSubscribeDance(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeDance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeDance(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeDanceRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::DanceResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeDance(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::mavsdk::rpc::lumos_server::SubscribeDanceRequest,::mavsdk::rpc::lumos_server::DanceResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeParams() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::mavsdk::rpc::lumos_server::SubscribeParamsRequest, ::mavsdk::rpc::lumos_server::ParamsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::mavsdk::rpc::lumos_server::SubscribeParamsRequest, ::mavsdk::rpc::lumos_server::ParamsResponse>* streamer) {
                       return this->StreamedSubscribeParams(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeParams(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeParamsRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ParamsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeParams(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::mavsdk::rpc::lumos_server::SubscribeParamsRequest,::mavsdk::rpc::lumos_server::ParamsResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeStart : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeStart() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::mavsdk::rpc::lumos_server::SubscribeStartRequest, ::mavsdk::rpc::lumos_server::StartResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::mavsdk::rpc::lumos_server::SubscribeStartRequest, ::mavsdk::rpc::lumos_server::StartResponse>* streamer) {
                       return this->StreamedSubscribeStart(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeStart() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeStart(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeStartRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::StartResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeStart(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::mavsdk::rpc::lumos_server::SubscribeStartRequest,::mavsdk::rpc::lumos_server::StartResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeLocalPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeLocalPos() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest, ::mavsdk::rpc::lumos_server::LocalPosResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest, ::mavsdk::rpc::lumos_server::LocalPosResponse>* streamer) {
                       return this->StreamedSubscribeLocalPos(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeLocalPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeLocalPos(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LocalPosResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeLocalPos(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::mavsdk::rpc::lumos_server::SubscribeLocalPosRequest,::mavsdk::rpc::lumos_server::LocalPosResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeGlobalPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeGlobalPos() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest, ::mavsdk::rpc::lumos_server::GlobalPosResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest, ::mavsdk::rpc::lumos_server::GlobalPosResponse>* streamer) {
                       return this->StreamedSubscribeGlobalPos(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeGlobalPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeGlobalPos(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::GlobalPosResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeGlobalPos(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::mavsdk::rpc::lumos_server::SubscribeGlobalPosRequest,::mavsdk::rpc::lumos_server::GlobalPosResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeLandCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeLandCmd() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest, ::mavsdk::rpc::lumos_server::LandCmdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest, ::mavsdk::rpc::lumos_server::LandCmdResponse>* streamer) {
                       return this->StreamedSubscribeLandCmd(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeLandCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeLandCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::LandCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeLandCmd(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::mavsdk::rpc::lumos_server::SubscribeLandCmdRequest,::mavsdk::rpc::lumos_server::LandCmdResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeRtlCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeRtlCmd() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest, ::mavsdk::rpc::lumos_server::RtlCmdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest, ::mavsdk::rpc::lumos_server::RtlCmdResponse>* streamer) {
                       return this->StreamedSubscribeRtlCmd(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeRtlCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeRtlCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::RtlCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeRtlCmd(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::mavsdk::rpc::lumos_server::SubscribeRtlCmdRequest,::mavsdk::rpc::lumos_server::RtlCmdResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeKillCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeKillCmd() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest, ::mavsdk::rpc::lumos_server::KillCmdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest, ::mavsdk::rpc::lumos_server::KillCmdResponse>* streamer) {
                       return this->StreamedSubscribeKillCmd(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeKillCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeKillCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::KillCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeKillCmd(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::mavsdk::rpc::lumos_server::SubscribeKillCmdRequest,::mavsdk::rpc::lumos_server::KillCmdResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeColorLedCmd : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeColorLedCmd() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest, ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest, ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* streamer) {
                       return this->StreamedSubscribeColorLedCmd(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeColorLedCmd() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeColorLedCmd(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeColorLedCmd(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::mavsdk::rpc::lumos_server::SubscribeColorLedCmdRequest,::mavsdk::rpc::lumos_server::ColorLedCmdResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_SubscribeDance<WithSplitStreamingMethod_SubscribeParams<WithSplitStreamingMethod_SubscribeStart<WithSplitStreamingMethod_SubscribeLocalPos<WithSplitStreamingMethod_SubscribeGlobalPos<WithSplitStreamingMethod_SubscribeLandCmd<WithSplitStreamingMethod_SubscribeRtlCmd<WithSplitStreamingMethod_SubscribeKillCmd<WithSplitStreamingMethod_SubscribeColorLedCmd<Service > > > > > > > > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_SetDroneInfo<WithStreamedUnaryMethod_SetCompanionStatus<WithSplitStreamingMethod_SubscribeDance<WithSplitStreamingMethod_SubscribeParams<WithSplitStreamingMethod_SubscribeStart<WithSplitStreamingMethod_SubscribeLocalPos<WithSplitStreamingMethod_SubscribeGlobalPos<WithSplitStreamingMethod_SubscribeLandCmd<WithSplitStreamingMethod_SubscribeRtlCmd<WithSplitStreamingMethod_SubscribeKillCmd<WithSplitStreamingMethod_SubscribeColorLedCmd<Service > > > > > > > > > > > StreamedService;
};

}  // namespace lumos_server
}  // namespace rpc
}  // namespace mavsdk


#endif  // GRPC_lumos_5fserver_2flumos_5fserver_2eproto__INCLUDED
