// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lumos_server/lumos_server.proto

#include "lumos_server/lumos_server.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace lumos_server {
      template <typename>
PROTOBUF_CONSTEXPR SetDroneStatusResponse::SetDroneStatusResponse(::_pbi::ConstantInitialized) {}
struct SetDroneStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetDroneStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetDroneStatusResponseDefaultTypeInternal() {}
  union {
    SetDroneStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetDroneStatusResponseDefaultTypeInternal _SetDroneStatusResponse_default_instance_;

inline constexpr LumosResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::lumos_server::LumosResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LumosResult::LumosResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LumosResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LumosResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LumosResultDefaultTypeInternal() {}
  union {
    LumosResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LumosResultDefaultTypeInternal _LumosResult_default_instance_;

inline constexpr DroneStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uuid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        battery_status_{0},
        lat_{0},
        lon_{0},
        alt_{0},
        mag_norm_{0},
        hdg_{0u},
        fw_major_{0u},
        fw_minor_{0u},
        fw_patch_{0u},
        dance_status_{0u},
        rssi_wifi_{0u},
        rssi_xbee_{0u},
        satellites_used_{0u},
        fix_type_{0u},
        alt_ref_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DroneStatus::DroneStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DroneStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DroneStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DroneStatusDefaultTypeInternal() {}
  union {
    DroneStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DroneStatusDefaultTypeInternal _DroneStatus_default_instance_;

inline constexpr SetDroneStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        drone_status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetDroneStatusRequest::SetDroneStatusRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetDroneStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetDroneStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetDroneStatusRequestDefaultTypeInternal() {}
  union {
    SetDroneStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetDroneStatusRequestDefaultTypeInternal _SetDroneStatusRequest_default_instance_;
}  // namespace lumos_server
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_lumos_5fserver_2flumos_5fserver_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_lumos_5fserver_2flumos_5fserver_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_lumos_5fserver_2flumos_5fserver_2eproto = nullptr;
const ::uint32_t TableStruct_lumos_5fserver_2flumos_5fserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::SetDroneStatusRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::SetDroneStatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::SetDroneStatusRequest, _impl_.drone_status_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::SetDroneStatusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::LumosResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::LumosResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::LumosResult, _impl_.result_str_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.battery_status_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.lat_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.lon_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.alt_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.mag_norm_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.hdg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.uuid_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.fw_major_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.fw_minor_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.fw_patch_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.dance_status_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.rssi_wifi_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.rssi_xbee_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.satellites_used_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.fix_type_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::lumos_server::DroneStatus, _impl_.alt_ref_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::mavsdk::rpc::lumos_server::SetDroneStatusRequest)},
        {10, -1, -1, sizeof(::mavsdk::rpc::lumos_server::SetDroneStatusResponse)},
        {18, -1, -1, sizeof(::mavsdk::rpc::lumos_server::LumosResult)},
        {28, -1, -1, sizeof(::mavsdk::rpc::lumos_server::DroneStatus)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::lumos_server::_SetDroneStatusRequest_default_instance_._instance,
    &::mavsdk::rpc::lumos_server::_SetDroneStatusResponse_default_instance_._instance,
    &::mavsdk::rpc::lumos_server::_LumosResult_default_instance_._instance,
    &::mavsdk::rpc::lumos_server::_DroneStatus_default_instance_._instance,
};
const char descriptor_table_protodef_lumos_5fserver_2flumos_5fserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\037lumos_server/lumos_server.proto\022\027mavsd"
    "k.rpc.lumos_server\032\024mavsdk_options.proto"
    "\"S\n\025SetDroneStatusRequest\022:\n\014drone_statu"
    "s\030\001 \001(\0132$.mavsdk.rpc.lumos_server.DroneS"
    "tatus\"\030\n\026SetDroneStatusResponse\"\216\001\n\013Lumo"
    "sResult\022;\n\006result\030\001 \001(\0162+.mavsdk.rpc.lum"
    "os_server.LumosResult.Result\022\022\n\nresult_s"
    "tr\030\002 \001(\t\".\n\006Result\022\022\n\016RESULT_SUCCESS\020\000\022\020"
    "\n\014RESULT_ERROR\020\001\"\247\002\n\013DroneStatus\022\026\n\016batt"
    "ery_status\030\001 \001(\002\022\013\n\003lat\030\002 \001(\005\022\013\n\003lon\030\003 \001"
    "(\005\022\013\n\003alt\030\004 \001(\005\022\020\n\010mag_norm\030\005 \001(\002\022\013\n\003hdg"
    "\030\006 \001(\r\022\014\n\004uuid\030\007 \001(\t\022\020\n\010fw_major\030\010 \001(\r\022\020"
    "\n\010fw_minor\030\t \001(\r\022\020\n\010fw_patch\030\n \001(\r\022\024\n\014da"
    "nce_status\030\013 \001(\r\022\021\n\trssi_wifi\030\014 \001(\r\022\021\n\tr"
    "ssi_xbee\030\r \001(\r\022\027\n\017satellites_used\030\016 \001(\r\022"
    "\020\n\010fix_type\030\017 \001(\r\022\017\n\007alt_ref\030\020 \001(\r2\215\001\n\022L"
    "umosServerService\022w\n\016SetDroneStatus\022..ma"
    "vsdk.rpc.lumos_server.SetDroneStatusRequ"
    "est\032/.mavsdk.rpc.lumos_server.SetDroneSt"
    "atusResponse\"\004\200\265\030\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto = {
    false,
    false,
    786,
    descriptor_table_protodef_lumos_5fserver_2flumos_5fserver_2eproto,
    "lumos_server/lumos_server.proto",
    &descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto_once,
    descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_lumos_5fserver_2flumos_5fserver_2eproto::offsets,
    file_level_metadata_lumos_5fserver_2flumos_5fserver_2eproto,
    file_level_enum_descriptors_lumos_5fserver_2flumos_5fserver_2eproto,
    file_level_service_descriptors_lumos_5fserver_2flumos_5fserver_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto_getter() {
  return &descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_lumos_5fserver_2flumos_5fserver_2eproto(&descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto);
namespace mavsdk {
namespace rpc {
namespace lumos_server {
const ::google::protobuf::EnumDescriptor* LumosResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto);
  return file_level_enum_descriptors_lumos_5fserver_2flumos_5fserver_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t LumosResult_Result_internal_data_[] = {
    131072u, 0u, };
bool LumosResult_Result_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr LumosResult_Result LumosResult::RESULT_SUCCESS;
constexpr LumosResult_Result LumosResult::RESULT_ERROR;
constexpr LumosResult_Result LumosResult::Result_MIN;
constexpr LumosResult_Result LumosResult::Result_MAX;
constexpr int LumosResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class SetDroneStatusRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetDroneStatusRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetDroneStatusRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::lumos_server::DroneStatus& drone_status(const SetDroneStatusRequest* msg);
  static void set_has_drone_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::lumos_server::DroneStatus& SetDroneStatusRequest::_Internal::drone_status(const SetDroneStatusRequest* msg) {
  return *msg->_impl_.drone_status_;
}
SetDroneStatusRequest::SetDroneStatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.lumos_server.SetDroneStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetDroneStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetDroneStatusRequest::SetDroneStatusRequest(
    ::google::protobuf::Arena* arena,
    const SetDroneStatusRequest& from)
    : ::google::protobuf::Message(arena) {
  SetDroneStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.drone_status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::lumos_server::DroneStatus>(arena, *from._impl_.drone_status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.lumos_server.SetDroneStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetDroneStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetDroneStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.drone_status_ = {};
}
SetDroneStatusRequest::~SetDroneStatusRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.lumos_server.SetDroneStatusRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetDroneStatusRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.drone_status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetDroneStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.lumos_server.SetDroneStatusRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.drone_status_ != nullptr);
    _impl_.drone_status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetDroneStatusRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetDroneStatusRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetDroneStatusRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetDroneStatusRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.lumos_server.DroneStatus drone_status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetDroneStatusRequest, _impl_.drone_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.lumos_server.DroneStatus drone_status = 1;
    {PROTOBUF_FIELD_OFFSET(SetDroneStatusRequest, _impl_.drone_status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::lumos_server::DroneStatus>()},
  }}, {{
  }},
};

::uint8_t* SetDroneStatusRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.lumos_server.SetDroneStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.lumos_server.DroneStatus drone_status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::drone_status(this),
        _Internal::drone_status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.lumos_server.SetDroneStatusRequest)
  return target;
}

::size_t SetDroneStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.lumos_server.SetDroneStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.lumos_server.DroneStatus drone_status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.drone_status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetDroneStatusRequest::_class_data_ = {
    SetDroneStatusRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetDroneStatusRequest::GetClassData() const {
  return &_class_data_;
}

void SetDroneStatusRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetDroneStatusRequest*>(&to_msg);
  auto& from = static_cast<const SetDroneStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.lumos_server.SetDroneStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_drone_status()->::mavsdk::rpc::lumos_server::DroneStatus::MergeFrom(
        from._internal_drone_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetDroneStatusRequest::CopyFrom(const SetDroneStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.lumos_server.SetDroneStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetDroneStatusRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetDroneStatusRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetDroneStatusRequest::InternalSwap(SetDroneStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.drone_status_, other->_impl_.drone_status_);
}

::google::protobuf::Metadata SetDroneStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto_getter, &descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto_once,
      file_level_metadata_lumos_5fserver_2flumos_5fserver_2eproto[0]);
}
// ===================================================================

class SetDroneStatusResponse::_Internal {
 public:
};

SetDroneStatusResponse::SetDroneStatusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.lumos_server.SetDroneStatusResponse)
}
SetDroneStatusResponse::SetDroneStatusResponse(
    ::google::protobuf::Arena* arena,
    const SetDroneStatusResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SetDroneStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.lumos_server.SetDroneStatusResponse)
}









::google::protobuf::Metadata SetDroneStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto_getter, &descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto_once,
      file_level_metadata_lumos_5fserver_2flumos_5fserver_2eproto[1]);
}
// ===================================================================

class LumosResult::_Internal {
 public:
};

LumosResult::LumosResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.lumos_server.LumosResult)
}
inline PROTOBUF_NDEBUG_INLINE LumosResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

LumosResult::LumosResult(
    ::google::protobuf::Arena* arena,
    const LumosResult& from)
    : ::google::protobuf::Message(arena) {
  LumosResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.lumos_server.LumosResult)
}
inline PROTOBUF_NDEBUG_INLINE LumosResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void LumosResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
LumosResult::~LumosResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.lumos_server.LumosResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LumosResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.result_str_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LumosResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.lumos_server.LumosResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LumosResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2> LumosResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LumosResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LumosResult, _impl_.result_str_)}},
    // .mavsdk.rpc.lumos_server.LumosResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LumosResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LumosResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.lumos_server.LumosResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(LumosResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(LumosResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\12\0\0\0\0\0"
    "mavsdk.rpc.lumos_server.LumosResult"
    "result_str"
  }},
};

::uint8_t* LumosResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.lumos_server.LumosResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.lumos_server.LumosResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.lumos_server.LumosResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.lumos_server.LumosResult)
  return target;
}

::size_t LumosResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.lumos_server.LumosResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.lumos_server.LumosResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LumosResult::_class_data_ = {
    LumosResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LumosResult::GetClassData() const {
  return &_class_data_;
}

void LumosResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LumosResult*>(&to_msg);
  auto& from = static_cast<const LumosResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.lumos_server.LumosResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LumosResult::CopyFrom(const LumosResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.lumos_server.LumosResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LumosResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LumosResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LumosResult::InternalSwap(LumosResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata LumosResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto_getter, &descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto_once,
      file_level_metadata_lumos_5fserver_2flumos_5fserver_2eproto[2]);
}
// ===================================================================

class DroneStatus::_Internal {
 public:
};

DroneStatus::DroneStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.lumos_server.DroneStatus)
}
inline PROTOBUF_NDEBUG_INLINE DroneStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : uuid_(arena, from.uuid_),
        _cached_size_{0} {}

DroneStatus::DroneStatus(
    ::google::protobuf::Arena* arena,
    const DroneStatus& from)
    : ::google::protobuf::Message(arena) {
  DroneStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, battery_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, battery_status_),
           offsetof(Impl_, alt_ref_) -
               offsetof(Impl_, battery_status_) +
               sizeof(Impl_::alt_ref_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.lumos_server.DroneStatus)
}
inline PROTOBUF_NDEBUG_INLINE DroneStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uuid_(arena),
        _cached_size_{0} {}

inline void DroneStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, battery_status_),
           0,
           offsetof(Impl_, alt_ref_) -
               offsetof(Impl_, battery_status_) +
               sizeof(Impl_::alt_ref_));
}
DroneStatus::~DroneStatus() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.lumos_server.DroneStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DroneStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uuid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DroneStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.lumos_server.DroneStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uuid_.ClearToEmpty();
  ::memset(&_impl_.battery_status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.alt_ref_) -
      reinterpret_cast<char*>(&_impl_.battery_status_)) + sizeof(_impl_.alt_ref_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DroneStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 16, 0, 64, 2> DroneStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901760,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DroneStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 alt_ref = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.alt_ref_)}},
    // float battery_status = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.battery_status_)}},
    // int32 lat = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DroneStatus, _impl_.lat_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.lat_)}},
    // int32 lon = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DroneStatus, _impl_.lon_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.lon_)}},
    // int32 alt = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DroneStatus, _impl_.alt_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.alt_)}},
    // float mag_norm = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.mag_norm_)}},
    // uint32 hdg = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DroneStatus, _impl_.hdg_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.hdg_)}},
    // string uuid = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.uuid_)}},
    // uint32 fw_major = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DroneStatus, _impl_.fw_major_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.fw_major_)}},
    // uint32 fw_minor = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DroneStatus, _impl_.fw_minor_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.fw_minor_)}},
    // uint32 fw_patch = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DroneStatus, _impl_.fw_patch_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.fw_patch_)}},
    // uint32 dance_status = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DroneStatus, _impl_.dance_status_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.dance_status_)}},
    // uint32 rssi_wifi = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DroneStatus, _impl_.rssi_wifi_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.rssi_wifi_)}},
    // uint32 rssi_xbee = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DroneStatus, _impl_.rssi_xbee_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.rssi_xbee_)}},
    // uint32 satellites_used = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DroneStatus, _impl_.satellites_used_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.satellites_used_)}},
    // uint32 fix_type = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DroneStatus, _impl_.fix_type_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.fix_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float battery_status = 1;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.battery_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int32 lat = 2;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.lat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 lon = 3;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.lon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 alt = 4;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.alt_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float mag_norm = 5;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.mag_norm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 hdg = 6;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.hdg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string uuid = 7;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.uuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 fw_major = 8;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.fw_major_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 fw_minor = 9;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.fw_minor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 fw_patch = 10;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.fw_patch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 dance_status = 11;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.dance_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 rssi_wifi = 12;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.rssi_wifi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 rssi_xbee = 13;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.rssi_xbee_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 satellites_used = 14;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.satellites_used_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 fix_type = 15;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.fix_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 alt_ref = 16;
    {PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.alt_ref_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\43\0\0\0\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "mavsdk.rpc.lumos_server.DroneStatus"
    "uuid"
  }},
};

::uint8_t* DroneStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.lumos_server.DroneStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float battery_status = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_battery_status = this->_internal_battery_status();
  ::uint32_t raw_battery_status;
  memcpy(&raw_battery_status, &tmp_battery_status, sizeof(tmp_battery_status));
  if (raw_battery_status != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_battery_status(), target);
  }

  // int32 lat = 2;
  if (this->_internal_lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_lat(), target);
  }

  // int32 lon = 3;
  if (this->_internal_lon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_lon(), target);
  }

  // int32 alt = 4;
  if (this->_internal_alt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_alt(), target);
  }

  // float mag_norm = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mag_norm = this->_internal_mag_norm();
  ::uint32_t raw_mag_norm;
  memcpy(&raw_mag_norm, &tmp_mag_norm, sizeof(tmp_mag_norm));
  if (raw_mag_norm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_mag_norm(), target);
  }

  // uint32 hdg = 6;
  if (this->_internal_hdg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_hdg(), target);
  }

  // string uuid = 7;
  if (!this->_internal_uuid().empty()) {
    const std::string& _s = this->_internal_uuid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.lumos_server.DroneStatus.uuid");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // uint32 fw_major = 8;
  if (this->_internal_fw_major() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_fw_major(), target);
  }

  // uint32 fw_minor = 9;
  if (this->_internal_fw_minor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_fw_minor(), target);
  }

  // uint32 fw_patch = 10;
  if (this->_internal_fw_patch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this->_internal_fw_patch(), target);
  }

  // uint32 dance_status = 11;
  if (this->_internal_dance_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this->_internal_dance_status(), target);
  }

  // uint32 rssi_wifi = 12;
  if (this->_internal_rssi_wifi() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this->_internal_rssi_wifi(), target);
  }

  // uint32 rssi_xbee = 13;
  if (this->_internal_rssi_xbee() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this->_internal_rssi_xbee(), target);
  }

  // uint32 satellites_used = 14;
  if (this->_internal_satellites_used() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this->_internal_satellites_used(), target);
  }

  // uint32 fix_type = 15;
  if (this->_internal_fix_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        15, this->_internal_fix_type(), target);
  }

  // uint32 alt_ref = 16;
  if (this->_internal_alt_ref() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        16, this->_internal_alt_ref(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.lumos_server.DroneStatus)
  return target;
}

::size_t DroneStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.lumos_server.DroneStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 7;
  if (!this->_internal_uuid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uuid());
  }

  // float battery_status = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_battery_status = this->_internal_battery_status();
  ::uint32_t raw_battery_status;
  memcpy(&raw_battery_status, &tmp_battery_status, sizeof(tmp_battery_status));
  if (raw_battery_status != 0) {
    total_size += 5;
  }

  // int32 lat = 2;
  if (this->_internal_lat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lat());
  }

  // int32 lon = 3;
  if (this->_internal_lon() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lon());
  }

  // int32 alt = 4;
  if (this->_internal_alt() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_alt());
  }

  // float mag_norm = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mag_norm = this->_internal_mag_norm();
  ::uint32_t raw_mag_norm;
  memcpy(&raw_mag_norm, &tmp_mag_norm, sizeof(tmp_mag_norm));
  if (raw_mag_norm != 0) {
    total_size += 5;
  }

  // uint32 hdg = 6;
  if (this->_internal_hdg() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_hdg());
  }

  // uint32 fw_major = 8;
  if (this->_internal_fw_major() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_fw_major());
  }

  // uint32 fw_minor = 9;
  if (this->_internal_fw_minor() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_fw_minor());
  }

  // uint32 fw_patch = 10;
  if (this->_internal_fw_patch() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_fw_patch());
  }

  // uint32 dance_status = 11;
  if (this->_internal_dance_status() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_dance_status());
  }

  // uint32 rssi_wifi = 12;
  if (this->_internal_rssi_wifi() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_rssi_wifi());
  }

  // uint32 rssi_xbee = 13;
  if (this->_internal_rssi_xbee() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_rssi_xbee());
  }

  // uint32 satellites_used = 14;
  if (this->_internal_satellites_used() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_satellites_used());
  }

  // uint32 fix_type = 15;
  if (this->_internal_fix_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_fix_type());
  }

  // uint32 alt_ref = 16;
  if (this->_internal_alt_ref() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                    this->_internal_alt_ref());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DroneStatus::_class_data_ = {
    DroneStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DroneStatus::GetClassData() const {
  return &_class_data_;
}

void DroneStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DroneStatus*>(&to_msg);
  auto& from = static_cast<const DroneStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.lumos_server.DroneStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_battery_status = from._internal_battery_status();
  ::uint32_t raw_battery_status;
  memcpy(&raw_battery_status, &tmp_battery_status, sizeof(tmp_battery_status));
  if (raw_battery_status != 0) {
    _this->_internal_set_battery_status(from._internal_battery_status());
  }
  if (from._internal_lat() != 0) {
    _this->_internal_set_lat(from._internal_lat());
  }
  if (from._internal_lon() != 0) {
    _this->_internal_set_lon(from._internal_lon());
  }
  if (from._internal_alt() != 0) {
    _this->_internal_set_alt(from._internal_alt());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_mag_norm = from._internal_mag_norm();
  ::uint32_t raw_mag_norm;
  memcpy(&raw_mag_norm, &tmp_mag_norm, sizeof(tmp_mag_norm));
  if (raw_mag_norm != 0) {
    _this->_internal_set_mag_norm(from._internal_mag_norm());
  }
  if (from._internal_hdg() != 0) {
    _this->_internal_set_hdg(from._internal_hdg());
  }
  if (from._internal_fw_major() != 0) {
    _this->_internal_set_fw_major(from._internal_fw_major());
  }
  if (from._internal_fw_minor() != 0) {
    _this->_internal_set_fw_minor(from._internal_fw_minor());
  }
  if (from._internal_fw_patch() != 0) {
    _this->_internal_set_fw_patch(from._internal_fw_patch());
  }
  if (from._internal_dance_status() != 0) {
    _this->_internal_set_dance_status(from._internal_dance_status());
  }
  if (from._internal_rssi_wifi() != 0) {
    _this->_internal_set_rssi_wifi(from._internal_rssi_wifi());
  }
  if (from._internal_rssi_xbee() != 0) {
    _this->_internal_set_rssi_xbee(from._internal_rssi_xbee());
  }
  if (from._internal_satellites_used() != 0) {
    _this->_internal_set_satellites_used(from._internal_satellites_used());
  }
  if (from._internal_fix_type() != 0) {
    _this->_internal_set_fix_type(from._internal_fix_type());
  }
  if (from._internal_alt_ref() != 0) {
    _this->_internal_set_alt_ref(from._internal_alt_ref());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DroneStatus::CopyFrom(const DroneStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.lumos_server.DroneStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DroneStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DroneStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DroneStatus::InternalSwap(DroneStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uuid_, &other->_impl_.uuid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.alt_ref_)
      + sizeof(DroneStatus::_impl_.alt_ref_)
      - PROTOBUF_FIELD_OFFSET(DroneStatus, _impl_.battery_status_)>(
          reinterpret_cast<char*>(&_impl_.battery_status_),
          reinterpret_cast<char*>(&other->_impl_.battery_status_));
}

::google::protobuf::Metadata DroneStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto_getter, &descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto_once,
      file_level_metadata_lumos_5fserver_2flumos_5fserver_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace lumos_server
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
