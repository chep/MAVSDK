// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lumos_server/lumos_server.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_lumos_5fserver_2flumos_5fserver_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_lumos_5fserver_2flumos_5fserver_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_lumos_5fserver_2flumos_5fserver_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_lumos_5fserver_2flumos_5fserver_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_lumos_5fserver_2flumos_5fserver_2eproto;
namespace mavsdk {
namespace rpc {
namespace lumos_server {
class DroneStatus;
struct DroneStatusDefaultTypeInternal;
extern DroneStatusDefaultTypeInternal _DroneStatus_default_instance_;
class LumosResult;
struct LumosResultDefaultTypeInternal;
extern LumosResultDefaultTypeInternal _LumosResult_default_instance_;
class SetDroneStatusRequest;
struct SetDroneStatusRequestDefaultTypeInternal;
extern SetDroneStatusRequestDefaultTypeInternal _SetDroneStatusRequest_default_instance_;
class SetDroneStatusResponse;
struct SetDroneStatusResponseDefaultTypeInternal;
extern SetDroneStatusResponseDefaultTypeInternal _SetDroneStatusResponse_default_instance_;
}  // namespace lumos_server
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace lumos_server {
enum LumosResult_Result : int {
  LumosResult_Result_RESULT_SUCCESS = 0,
  LumosResult_Result_RESULT_ERROR = 1,
  LumosResult_Result_LumosResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LumosResult_Result_LumosResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LumosResult_Result_IsValid(int value);
extern const uint32_t LumosResult_Result_internal_data_[];
constexpr LumosResult_Result LumosResult_Result_Result_MIN = static_cast<LumosResult_Result>(0);
constexpr LumosResult_Result LumosResult_Result_Result_MAX = static_cast<LumosResult_Result>(1);
constexpr int LumosResult_Result_Result_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
LumosResult_Result_descriptor();
template <typename T>
const std::string& LumosResult_Result_Name(T value) {
  static_assert(std::is_same<T, LumosResult_Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return LumosResult_Result_Name(static_cast<LumosResult_Result>(value));
}
template <>
inline const std::string& LumosResult_Result_Name(LumosResult_Result value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LumosResult_Result_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool LumosResult_Result_Parse(absl::string_view name, LumosResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LumosResult_Result>(
      LumosResult_Result_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SetDroneStatusResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.lumos_server.SetDroneStatusResponse) */ {
 public:
  inline SetDroneStatusResponse() : SetDroneStatusResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetDroneStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetDroneStatusResponse(const SetDroneStatusResponse& from)
      : SetDroneStatusResponse(nullptr, from) {}
  SetDroneStatusResponse(SetDroneStatusResponse&& from) noexcept
    : SetDroneStatusResponse() {
    *this = ::std::move(from);
  }

  inline SetDroneStatusResponse& operator=(const SetDroneStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetDroneStatusResponse& operator=(SetDroneStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetDroneStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetDroneStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SetDroneStatusResponse*>(
               &_SetDroneStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetDroneStatusResponse& a, SetDroneStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetDroneStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetDroneStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetDroneStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetDroneStatusResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetDroneStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetDroneStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.lumos_server.SetDroneStatusResponse";
  }
  protected:
  explicit SetDroneStatusResponse(::google::protobuf::Arena* arena);
  SetDroneStatusResponse(::google::protobuf::Arena* arena, const SetDroneStatusResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.lumos_server.SetDroneStatusResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lumos_5fserver_2flumos_5fserver_2eproto;
};// -------------------------------------------------------------------

class LumosResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.lumos_server.LumosResult) */ {
 public:
  inline LumosResult() : LumosResult(nullptr) {}
  ~LumosResult() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LumosResult(::google::protobuf::internal::ConstantInitialized);

  inline LumosResult(const LumosResult& from)
      : LumosResult(nullptr, from) {}
  LumosResult(LumosResult&& from) noexcept
    : LumosResult() {
    *this = ::std::move(from);
  }

  inline LumosResult& operator=(const LumosResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline LumosResult& operator=(LumosResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LumosResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const LumosResult* internal_default_instance() {
    return reinterpret_cast<const LumosResult*>(
               &_LumosResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(LumosResult& a, LumosResult& b) {
    a.Swap(&b);
  }
  inline void Swap(LumosResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LumosResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LumosResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LumosResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LumosResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LumosResult& from) {
    LumosResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LumosResult* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.lumos_server.LumosResult";
  }
  protected:
  explicit LumosResult(::google::protobuf::Arena* arena);
  LumosResult(::google::protobuf::Arena* arena, const LumosResult& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Result = LumosResult_Result;
  static constexpr Result RESULT_SUCCESS = LumosResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_ERROR = LumosResult_Result_RESULT_ERROR;
  static inline bool Result_IsValid(int value) {
    return LumosResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN = LumosResult_Result_Result_MIN;
  static constexpr Result Result_MAX = LumosResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE = LumosResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Result_descriptor() {
    return LumosResult_Result_descriptor();
  }
  template <typename T>
  static inline const std::string& Result_Name(T value) {
    return LumosResult_Result_Name(value);
  }
  static inline bool Result_Parse(absl::string_view name, Result* value) {
    return LumosResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str() ;
  const std::string& result_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_str(Arg_&& arg, Args_... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* value);

  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(
      const std::string& value);
  std::string* _internal_mutable_result_str();

  public:
  // .mavsdk.rpc.lumos_server.LumosResult.Result result = 1;
  void clear_result() ;
  ::mavsdk::rpc::lumos_server::LumosResult_Result result() const;
  void set_result(::mavsdk::rpc::lumos_server::LumosResult_Result value);

  private:
  ::mavsdk::rpc::lumos_server::LumosResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::lumos_server::LumosResult_Result value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.lumos_server.LumosResult)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_str_;
    int result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lumos_5fserver_2flumos_5fserver_2eproto;
};// -------------------------------------------------------------------

class DroneStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.lumos_server.DroneStatus) */ {
 public:
  inline DroneStatus() : DroneStatus(nullptr) {}
  ~DroneStatus() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DroneStatus(::google::protobuf::internal::ConstantInitialized);

  inline DroneStatus(const DroneStatus& from)
      : DroneStatus(nullptr, from) {}
  DroneStatus(DroneStatus&& from) noexcept
    : DroneStatus() {
    *this = ::std::move(from);
  }

  inline DroneStatus& operator=(const DroneStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline DroneStatus& operator=(DroneStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DroneStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const DroneStatus* internal_default_instance() {
    return reinterpret_cast<const DroneStatus*>(
               &_DroneStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DroneStatus& a, DroneStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(DroneStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DroneStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DroneStatus* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DroneStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DroneStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DroneStatus& from) {
    DroneStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DroneStatus* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.lumos_server.DroneStatus";
  }
  protected:
  explicit DroneStatus(::google::protobuf::Arena* arena);
  DroneStatus(::google::protobuf::Arena* arena, const DroneStatus& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUuidFieldNumber = 7,
    kBatteryStatusFieldNumber = 1,
    kLatFieldNumber = 2,
    kLonFieldNumber = 3,
    kAltFieldNumber = 4,
    kMagNormFieldNumber = 5,
    kHdgFieldNumber = 6,
    kFwMajorFieldNumber = 8,
    kFwMinorFieldNumber = 9,
    kFwPatchFieldNumber = 10,
    kDanceStatusFieldNumber = 11,
    kRssiWifiFieldNumber = 12,
    kRssiXbeeFieldNumber = 13,
    kSatellitesUsedFieldNumber = 14,
    kFixTypeFieldNumber = 15,
    kAltRefFieldNumber = 16,
  };
  // string uuid = 7;
  void clear_uuid() ;
  const std::string& uuid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uuid(Arg_&& arg, Args_... args);
  std::string* mutable_uuid();
  PROTOBUF_NODISCARD std::string* release_uuid();
  void set_allocated_uuid(std::string* value);

  private:
  const std::string& _internal_uuid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uuid(
      const std::string& value);
  std::string* _internal_mutable_uuid();

  public:
  // float battery_status = 1;
  void clear_battery_status() ;
  float battery_status() const;
  void set_battery_status(float value);

  private:
  float _internal_battery_status() const;
  void _internal_set_battery_status(float value);

  public:
  // int32 lat = 2;
  void clear_lat() ;
  ::int32_t lat() const;
  void set_lat(::int32_t value);

  private:
  ::int32_t _internal_lat() const;
  void _internal_set_lat(::int32_t value);

  public:
  // int32 lon = 3;
  void clear_lon() ;
  ::int32_t lon() const;
  void set_lon(::int32_t value);

  private:
  ::int32_t _internal_lon() const;
  void _internal_set_lon(::int32_t value);

  public:
  // int32 alt = 4;
  void clear_alt() ;
  ::int32_t alt() const;
  void set_alt(::int32_t value);

  private:
  ::int32_t _internal_alt() const;
  void _internal_set_alt(::int32_t value);

  public:
  // float mag_norm = 5;
  void clear_mag_norm() ;
  float mag_norm() const;
  void set_mag_norm(float value);

  private:
  float _internal_mag_norm() const;
  void _internal_set_mag_norm(float value);

  public:
  // uint32 hdg = 6;
  void clear_hdg() ;
  ::uint32_t hdg() const;
  void set_hdg(::uint32_t value);

  private:
  ::uint32_t _internal_hdg() const;
  void _internal_set_hdg(::uint32_t value);

  public:
  // uint32 fw_major = 8;
  void clear_fw_major() ;
  ::uint32_t fw_major() const;
  void set_fw_major(::uint32_t value);

  private:
  ::uint32_t _internal_fw_major() const;
  void _internal_set_fw_major(::uint32_t value);

  public:
  // uint32 fw_minor = 9;
  void clear_fw_minor() ;
  ::uint32_t fw_minor() const;
  void set_fw_minor(::uint32_t value);

  private:
  ::uint32_t _internal_fw_minor() const;
  void _internal_set_fw_minor(::uint32_t value);

  public:
  // uint32 fw_patch = 10;
  void clear_fw_patch() ;
  ::uint32_t fw_patch() const;
  void set_fw_patch(::uint32_t value);

  private:
  ::uint32_t _internal_fw_patch() const;
  void _internal_set_fw_patch(::uint32_t value);

  public:
  // uint32 dance_status = 11;
  void clear_dance_status() ;
  ::uint32_t dance_status() const;
  void set_dance_status(::uint32_t value);

  private:
  ::uint32_t _internal_dance_status() const;
  void _internal_set_dance_status(::uint32_t value);

  public:
  // uint32 rssi_wifi = 12;
  void clear_rssi_wifi() ;
  ::uint32_t rssi_wifi() const;
  void set_rssi_wifi(::uint32_t value);

  private:
  ::uint32_t _internal_rssi_wifi() const;
  void _internal_set_rssi_wifi(::uint32_t value);

  public:
  // uint32 rssi_xbee = 13;
  void clear_rssi_xbee() ;
  ::uint32_t rssi_xbee() const;
  void set_rssi_xbee(::uint32_t value);

  private:
  ::uint32_t _internal_rssi_xbee() const;
  void _internal_set_rssi_xbee(::uint32_t value);

  public:
  // uint32 satellites_used = 14;
  void clear_satellites_used() ;
  ::uint32_t satellites_used() const;
  void set_satellites_used(::uint32_t value);

  private:
  ::uint32_t _internal_satellites_used() const;
  void _internal_set_satellites_used(::uint32_t value);

  public:
  // uint32 fix_type = 15;
  void clear_fix_type() ;
  ::uint32_t fix_type() const;
  void set_fix_type(::uint32_t value);

  private:
  ::uint32_t _internal_fix_type() const;
  void _internal_set_fix_type(::uint32_t value);

  public:
  // uint32 alt_ref = 16;
  void clear_alt_ref() ;
  ::uint32_t alt_ref() const;
  void set_alt_ref(::uint32_t value);

  private:
  ::uint32_t _internal_alt_ref() const;
  void _internal_set_alt_ref(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.lumos_server.DroneStatus)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 0,
      64, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr uuid_;
    float battery_status_;
    ::int32_t lat_;
    ::int32_t lon_;
    ::int32_t alt_;
    float mag_norm_;
    ::uint32_t hdg_;
    ::uint32_t fw_major_;
    ::uint32_t fw_minor_;
    ::uint32_t fw_patch_;
    ::uint32_t dance_status_;
    ::uint32_t rssi_wifi_;
    ::uint32_t rssi_xbee_;
    ::uint32_t satellites_used_;
    ::uint32_t fix_type_;
    ::uint32_t alt_ref_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lumos_5fserver_2flumos_5fserver_2eproto;
};// -------------------------------------------------------------------

class SetDroneStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.lumos_server.SetDroneStatusRequest) */ {
 public:
  inline SetDroneStatusRequest() : SetDroneStatusRequest(nullptr) {}
  ~SetDroneStatusRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetDroneStatusRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetDroneStatusRequest(const SetDroneStatusRequest& from)
      : SetDroneStatusRequest(nullptr, from) {}
  SetDroneStatusRequest(SetDroneStatusRequest&& from) noexcept
    : SetDroneStatusRequest() {
    *this = ::std::move(from);
  }

  inline SetDroneStatusRequest& operator=(const SetDroneStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetDroneStatusRequest& operator=(SetDroneStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetDroneStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetDroneStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SetDroneStatusRequest*>(
               &_SetDroneStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SetDroneStatusRequest& a, SetDroneStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetDroneStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetDroneStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetDroneStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetDroneStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetDroneStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetDroneStatusRequest& from) {
    SetDroneStatusRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetDroneStatusRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.lumos_server.SetDroneStatusRequest";
  }
  protected:
  explicit SetDroneStatusRequest(::google::protobuf::Arena* arena);
  SetDroneStatusRequest(::google::protobuf::Arena* arena, const SetDroneStatusRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDroneStatusFieldNumber = 1,
  };
  // .mavsdk.rpc.lumos_server.DroneStatus drone_status = 1;
  bool has_drone_status() const;
  void clear_drone_status() ;
  const ::mavsdk::rpc::lumos_server::DroneStatus& drone_status() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::lumos_server::DroneStatus* release_drone_status();
  ::mavsdk::rpc::lumos_server::DroneStatus* mutable_drone_status();
  void set_allocated_drone_status(::mavsdk::rpc::lumos_server::DroneStatus* value);
  void unsafe_arena_set_allocated_drone_status(::mavsdk::rpc::lumos_server::DroneStatus* value);
  ::mavsdk::rpc::lumos_server::DroneStatus* unsafe_arena_release_drone_status();

  private:
  const ::mavsdk::rpc::lumos_server::DroneStatus& _internal_drone_status() const;
  ::mavsdk::rpc::lumos_server::DroneStatus* _internal_mutable_drone_status();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.lumos_server.SetDroneStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::lumos_server::DroneStatus* drone_status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lumos_5fserver_2flumos_5fserver_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SetDroneStatusRequest

// .mavsdk.rpc.lumos_server.DroneStatus drone_status = 1;
inline bool SetDroneStatusRequest::has_drone_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.drone_status_ != nullptr);
  return value;
}
inline void SetDroneStatusRequest::clear_drone_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.drone_status_ != nullptr) _impl_.drone_status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::lumos_server::DroneStatus& SetDroneStatusRequest::_internal_drone_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::lumos_server::DroneStatus* p = _impl_.drone_status_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::lumos_server::DroneStatus&>(::mavsdk::rpc::lumos_server::_DroneStatus_default_instance_);
}
inline const ::mavsdk::rpc::lumos_server::DroneStatus& SetDroneStatusRequest::drone_status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.SetDroneStatusRequest.drone_status)
  return _internal_drone_status();
}
inline void SetDroneStatusRequest::unsafe_arena_set_allocated_drone_status(::mavsdk::rpc::lumos_server::DroneStatus* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.drone_status_);
  }
  _impl_.drone_status_ = reinterpret_cast<::mavsdk::rpc::lumos_server::DroneStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.lumos_server.SetDroneStatusRequest.drone_status)
}
inline ::mavsdk::rpc::lumos_server::DroneStatus* SetDroneStatusRequest::release_drone_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::lumos_server::DroneStatus* released = _impl_.drone_status_;
  _impl_.drone_status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::lumos_server::DroneStatus* SetDroneStatusRequest::unsafe_arena_release_drone_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.lumos_server.SetDroneStatusRequest.drone_status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::lumos_server::DroneStatus* temp = _impl_.drone_status_;
  _impl_.drone_status_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::lumos_server::DroneStatus* SetDroneStatusRequest::_internal_mutable_drone_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.drone_status_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::lumos_server::DroneStatus>(GetArena());
    _impl_.drone_status_ = reinterpret_cast<::mavsdk::rpc::lumos_server::DroneStatus*>(p);
  }
  return _impl_.drone_status_;
}
inline ::mavsdk::rpc::lumos_server::DroneStatus* SetDroneStatusRequest::mutable_drone_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::lumos_server::DroneStatus* _msg = _internal_mutable_drone_status();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.lumos_server.SetDroneStatusRequest.drone_status)
  return _msg;
}
inline void SetDroneStatusRequest::set_allocated_drone_status(::mavsdk::rpc::lumos_server::DroneStatus* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::lumos_server::DroneStatus*>(_impl_.drone_status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::lumos_server::DroneStatus*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.drone_status_ = reinterpret_cast<::mavsdk::rpc::lumos_server::DroneStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.lumos_server.SetDroneStatusRequest.drone_status)
}

// -------------------------------------------------------------------

// SetDroneStatusResponse

// -------------------------------------------------------------------

// LumosResult

// .mavsdk.rpc.lumos_server.LumosResult.Result result = 1;
inline void LumosResult::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = 0;
}
inline ::mavsdk::rpc::lumos_server::LumosResult_Result LumosResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.LumosResult.result)
  return _internal_result();
}
inline void LumosResult::set_result(::mavsdk::rpc::lumos_server::LumosResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.LumosResult.result)
}
inline ::mavsdk::rpc::lumos_server::LumosResult_Result LumosResult::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::lumos_server::LumosResult_Result>(_impl_.result_);
}
inline void LumosResult::_internal_set_result(::mavsdk::rpc::lumos_server::LumosResult_Result value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// string result_str = 2;
inline void LumosResult::clear_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.ClearToEmpty();
}
inline const std::string& LumosResult::result_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.LumosResult.result_str)
  return _internal_result_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LumosResult::set_result_str(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.LumosResult.result_str)
}
inline std::string* LumosResult::mutable_result_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.lumos_server.LumosResult.result_str)
  return _s;
}
inline const std::string& LumosResult::_internal_result_str() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_str_.Get();
}
inline void LumosResult::_internal_set_result_str(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(value, GetArena());
}
inline std::string* LumosResult::_internal_mutable_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_str_.Mutable( GetArena());
}
inline std::string* LumosResult::release_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.lumos_server.LumosResult.result_str)
  return _impl_.result_str_.Release();
}
inline void LumosResult::set_allocated_result_str(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_str_.IsDefault()) {
          _impl_.result_str_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.lumos_server.LumosResult.result_str)
}

// -------------------------------------------------------------------

// DroneStatus

// float battery_status = 1;
inline void DroneStatus::clear_battery_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battery_status_ = 0;
}
inline float DroneStatus::battery_status() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.battery_status)
  return _internal_battery_status();
}
inline void DroneStatus::set_battery_status(float value) {
  _internal_set_battery_status(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.battery_status)
}
inline float DroneStatus::_internal_battery_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battery_status_;
}
inline void DroneStatus::_internal_set_battery_status(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.battery_status_ = value;
}

// int32 lat = 2;
inline void DroneStatus::clear_lat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lat_ = 0;
}
inline ::int32_t DroneStatus::lat() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.lat)
  return _internal_lat();
}
inline void DroneStatus::set_lat(::int32_t value) {
  _internal_set_lat(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.lat)
}
inline ::int32_t DroneStatus::_internal_lat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lat_;
}
inline void DroneStatus::_internal_set_lat(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lat_ = value;
}

// int32 lon = 3;
inline void DroneStatus::clear_lon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lon_ = 0;
}
inline ::int32_t DroneStatus::lon() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.lon)
  return _internal_lon();
}
inline void DroneStatus::set_lon(::int32_t value) {
  _internal_set_lon(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.lon)
}
inline ::int32_t DroneStatus::_internal_lon() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lon_;
}
inline void DroneStatus::_internal_set_lon(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lon_ = value;
}

// int32 alt = 4;
inline void DroneStatus::clear_alt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.alt_ = 0;
}
inline ::int32_t DroneStatus::alt() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.alt)
  return _internal_alt();
}
inline void DroneStatus::set_alt(::int32_t value) {
  _internal_set_alt(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.alt)
}
inline ::int32_t DroneStatus::_internal_alt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.alt_;
}
inline void DroneStatus::_internal_set_alt(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.alt_ = value;
}

// float mag_norm = 5;
inline void DroneStatus::clear_mag_norm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mag_norm_ = 0;
}
inline float DroneStatus::mag_norm() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.mag_norm)
  return _internal_mag_norm();
}
inline void DroneStatus::set_mag_norm(float value) {
  _internal_set_mag_norm(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.mag_norm)
}
inline float DroneStatus::_internal_mag_norm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mag_norm_;
}
inline void DroneStatus::_internal_set_mag_norm(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mag_norm_ = value;
}

// uint32 hdg = 6;
inline void DroneStatus::clear_hdg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.hdg_ = 0u;
}
inline ::uint32_t DroneStatus::hdg() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.hdg)
  return _internal_hdg();
}
inline void DroneStatus::set_hdg(::uint32_t value) {
  _internal_set_hdg(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.hdg)
}
inline ::uint32_t DroneStatus::_internal_hdg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.hdg_;
}
inline void DroneStatus::_internal_set_hdg(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.hdg_ = value;
}

// string uuid = 7;
inline void DroneStatus::clear_uuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uuid_.ClearToEmpty();
}
inline const std::string& DroneStatus::uuid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.uuid)
  return _internal_uuid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DroneStatus::set_uuid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uuid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.uuid)
}
inline std::string* DroneStatus::mutable_uuid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uuid();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.lumos_server.DroneStatus.uuid)
  return _s;
}
inline const std::string& DroneStatus::_internal_uuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uuid_.Get();
}
inline void DroneStatus::_internal_set_uuid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uuid_.Set(value, GetArena());
}
inline std::string* DroneStatus::_internal_mutable_uuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.uuid_.Mutable( GetArena());
}
inline std::string* DroneStatus::release_uuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.lumos_server.DroneStatus.uuid)
  return _impl_.uuid_.Release();
}
inline void DroneStatus::set_allocated_uuid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uuid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uuid_.IsDefault()) {
          _impl_.uuid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.lumos_server.DroneStatus.uuid)
}

// uint32 fw_major = 8;
inline void DroneStatus::clear_fw_major() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fw_major_ = 0u;
}
inline ::uint32_t DroneStatus::fw_major() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.fw_major)
  return _internal_fw_major();
}
inline void DroneStatus::set_fw_major(::uint32_t value) {
  _internal_set_fw_major(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.fw_major)
}
inline ::uint32_t DroneStatus::_internal_fw_major() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fw_major_;
}
inline void DroneStatus::_internal_set_fw_major(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fw_major_ = value;
}

// uint32 fw_minor = 9;
inline void DroneStatus::clear_fw_minor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fw_minor_ = 0u;
}
inline ::uint32_t DroneStatus::fw_minor() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.fw_minor)
  return _internal_fw_minor();
}
inline void DroneStatus::set_fw_minor(::uint32_t value) {
  _internal_set_fw_minor(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.fw_minor)
}
inline ::uint32_t DroneStatus::_internal_fw_minor() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fw_minor_;
}
inline void DroneStatus::_internal_set_fw_minor(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fw_minor_ = value;
}

// uint32 fw_patch = 10;
inline void DroneStatus::clear_fw_patch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fw_patch_ = 0u;
}
inline ::uint32_t DroneStatus::fw_patch() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.fw_patch)
  return _internal_fw_patch();
}
inline void DroneStatus::set_fw_patch(::uint32_t value) {
  _internal_set_fw_patch(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.fw_patch)
}
inline ::uint32_t DroneStatus::_internal_fw_patch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fw_patch_;
}
inline void DroneStatus::_internal_set_fw_patch(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fw_patch_ = value;
}

// uint32 dance_status = 11;
inline void DroneStatus::clear_dance_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dance_status_ = 0u;
}
inline ::uint32_t DroneStatus::dance_status() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.dance_status)
  return _internal_dance_status();
}
inline void DroneStatus::set_dance_status(::uint32_t value) {
  _internal_set_dance_status(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.dance_status)
}
inline ::uint32_t DroneStatus::_internal_dance_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dance_status_;
}
inline void DroneStatus::_internal_set_dance_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dance_status_ = value;
}

// uint32 rssi_wifi = 12;
inline void DroneStatus::clear_rssi_wifi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rssi_wifi_ = 0u;
}
inline ::uint32_t DroneStatus::rssi_wifi() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.rssi_wifi)
  return _internal_rssi_wifi();
}
inline void DroneStatus::set_rssi_wifi(::uint32_t value) {
  _internal_set_rssi_wifi(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.rssi_wifi)
}
inline ::uint32_t DroneStatus::_internal_rssi_wifi() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rssi_wifi_;
}
inline void DroneStatus::_internal_set_rssi_wifi(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rssi_wifi_ = value;
}

// uint32 rssi_xbee = 13;
inline void DroneStatus::clear_rssi_xbee() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rssi_xbee_ = 0u;
}
inline ::uint32_t DroneStatus::rssi_xbee() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.rssi_xbee)
  return _internal_rssi_xbee();
}
inline void DroneStatus::set_rssi_xbee(::uint32_t value) {
  _internal_set_rssi_xbee(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.rssi_xbee)
}
inline ::uint32_t DroneStatus::_internal_rssi_xbee() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rssi_xbee_;
}
inline void DroneStatus::_internal_set_rssi_xbee(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rssi_xbee_ = value;
}

// uint32 satellites_used = 14;
inline void DroneStatus::clear_satellites_used() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.satellites_used_ = 0u;
}
inline ::uint32_t DroneStatus::satellites_used() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.satellites_used)
  return _internal_satellites_used();
}
inline void DroneStatus::set_satellites_used(::uint32_t value) {
  _internal_set_satellites_used(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.satellites_used)
}
inline ::uint32_t DroneStatus::_internal_satellites_used() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.satellites_used_;
}
inline void DroneStatus::_internal_set_satellites_used(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.satellites_used_ = value;
}

// uint32 fix_type = 15;
inline void DroneStatus::clear_fix_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fix_type_ = 0u;
}
inline ::uint32_t DroneStatus::fix_type() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.fix_type)
  return _internal_fix_type();
}
inline void DroneStatus::set_fix_type(::uint32_t value) {
  _internal_set_fix_type(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.fix_type)
}
inline ::uint32_t DroneStatus::_internal_fix_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fix_type_;
}
inline void DroneStatus::_internal_set_fix_type(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fix_type_ = value;
}

// uint32 alt_ref = 16;
inline void DroneStatus::clear_alt_ref() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.alt_ref_ = 0u;
}
inline ::uint32_t DroneStatus::alt_ref() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.lumos_server.DroneStatus.alt_ref)
  return _internal_alt_ref();
}
inline void DroneStatus::set_alt_ref(::uint32_t value) {
  _internal_set_alt_ref(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.lumos_server.DroneStatus.alt_ref)
}
inline ::uint32_t DroneStatus::_internal_alt_ref() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.alt_ref_;
}
inline void DroneStatus::_internal_set_alt_ref(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.alt_ref_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace lumos_server
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::lumos_server::LumosResult_Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::lumos_server::LumosResult_Result>() {
  return ::mavsdk::rpc::lumos_server::LumosResult_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_lumos_5fserver_2flumos_5fserver_2eproto_2epb_2eh
